{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "pharmacy",
        "designer|userClassName": "Pharmacy",
        "models": [
            "OrderStocksModel",
            "ItemsList",
            "Locations",
            "PendingPrescription",
            "PatientDetails",
            "StockLevelsModel",
            "ServiceOrdesrModel",
            "Prescriptions"
        ],
        "stores": [
            "OrderStocksStore",
            "InventoryItemStore",
            "SubCategoryStore",
            "CategoryStore",
            "ItemLocationStore",
            "PricesStore",
            "LocationsStore",
            "StoreUsers",
            "PendingPrescription",
            "PrescriptionStore",
            "DepartmentsStore",
            "PurchOrdersStore",
            "OrderDetailStore",
            "OrdersServiceStore",
            "DrugsList"
        ],
        "views": [
            "ItemsList",
            "Prescriptions",
            "OrdersForm",
            "ServiceOrders",
            "StockLevels",
            "PrescriptionForm",
            "Dosage",
            "PendingPrescriptions",
            "SupplierForm",
            "PurchaseOrders",
            "IssueDrugs",
            "DosageList",
            "DrugsList",
            "MainView"
        ]
    },
    "configAlternates": {
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "models": "typedarray",
        "stores": "typedarray",
        "views": "typedarray"
    },
    "name": "MyController",
    "designerId": "6eb43e8f-5f3f-4d5d-8902-80d6e36e2d45",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "this.control({",
                    "    '#openItemsList':{",
                    "        click:this.opeItemsList",
                    "    },",
                    "    '#mnuOrders':{",
                    "        click:this.openOrdersForm",
                    "    },",
                    "    '#mnuServiceOrders':{",
                    "        click:this.openServiceOrders",
                    "    },",
                    "    '#mnuStockLevels':{",
                    "        click:this.openStockLevels",
                    "    },",
                    "    '#cmdGetDrugsItems':{",
                    "        click:this.openItemsList",
                    "    },",
                    "    '#cmdGetItems':{",
                    "        click:this.openItemsList4",
                    "    },",
                    "    '#txtSearchItems':{",
                    "        change:this.filterItems",
                    "    },",
                    "    '#orderType':{",
                    "        change:this.setOrderNo",
                    "    },",
                    "    '#drugsList':{",
                    "        itemdblclick:this.addSelectedItems",
                    "    },",
                    "    '#cmdSaveOrder':{",
                    "        click:this.saveOrder",
                    "    },'#department':{",
                    "        select:this.setDeptName",
                    "    },",
                    "    '#suppStore':{",
                    "        select:this.setSuppName",
                    "    },",
                    "    '#serviceStore':{",
                    "        select:this.selectPendingOrders",
                    "    },",
                    "    '#pendingOrders':{",
                    "        itemclick:this.loadDetailedOrder",
                    "    },",
                    "    '#serviceOrders':{",
                    "        click:this.serviceOrders",
                    "    },",
                    "    '#levelsGrid':{",
                    "        itemclick:this.loadLevelsForm",
                    "    },",
                    "    '#saveStockAdjustments':{",
                    "        click:this.saveStockAdjustments",
                    "    },",
                    "    '#mnuPrescriptions':{",
                    "        click:this.openPrescriptions",
                    "    },",
                    "    '#pendingPrescGrid':{",
                    "        itemclick:this.showPrescriptions",
                    "    },",
                    "    '#cmdDispensDrugs':{",
                    "        click:this.openDispensWindow",
                    "    },",
                    "    '#mnuIssue':{",
                    "        click:this.displayIssueForm",
                    "    },",
                    "    '#itemsList':{",
                    "        click:this.loadSelectedDrugs",
                    "    },",
                    "    '#cmdNewPrescription':{",
                    "        click:this.createPrescription",
                    "    },",
                    "    '#cmdRemoveDose':{",
                    "        click:this.removeDose",
                    "    },",
                    "    '#cmdPrescribe':{",
                    "        click:this.prescribe",
                    "    },",
                    "    '#days':{",
                    "        change:this.getTotalDosage",
                    "    },",
                    "    '#Pid':{",
                    "        blur:this.loadPatientDetails",
                    "    },",
                    "    '#store':{",
                    "        select:this.loadPrescriptionOrder",
                    "    },",
                    "    '#issueDrugs':{",
                    "        click:this.issueDrugs",
                    "    },",
                    "    '#mnuPatientReturns':{",
                    "        click:this.openReturnOrders",
                    "    },",
                    "    '#cmdReturnDrugs':{",
                    "        click:this.returnDrugs",
                    "    },",
                    "    '#prescGrid':{",
                    "        itemclick:this.loadDrugsToIssue",
                    "    },",
                    "    '#cmdPreviewPrescriptions':{",
                    "        click:this.previewDrugsToReturn",
                    "    },",
                    "    '#mnuIssuedDrugs':{",
                    "        click:this.previewIssuedDrugs",
                    "    },",
                    "    '#mnuInternalOrders':{",
                    "        click:this.previewInteralOrders",
                    "    },",
                    "    '#mnuStockAdjustments':{",
                    "        click:this.previewStockAdjustments",
                    "    },",
                    "    '#mnuStockMovements':{",
                    "        click:this.previewMovements",
                    "    },",
                    "    '#mnuStockValuation':{",
                    "        click:this.previewValuations",
                    "    },",
                    "    '#cmdPreviewValuation':{",
                    "        click:this.loadValuation",
                    "    },",
                    "    '#cancelOrder':{",
                    "        click:this.cancelOrder",
                    "    },",
                    "    '#issueType':{",
                    "        change:this.setIssueNo",
                    "    },",
                    "    '#prescParams':{",
                    "      //  specialkey:this.getPressedKey,",
                    "        change:this.filterPrescriptions",
                    "    },",
                    "    '#OrderType':{",
                    "        change:this.setOrderType",
                    "    },",
                    "    '#cmdNewSupplier':{",
                    "        click:this.newSupplier",
                    "    },",
                    "    '#cmdSaveSuppler':{",
                    "        click:this.saveSupplier",
                    "    },",
                    "    '#orderNo':{",
                    "        render:this.setOrderNo",
                    "    },",
                    "    '#newOrder':{",
                    "        click:this.createPurchOrder",
                    "    },",
                    "    \"#orderDetailsButton\": {",
                    "        click: 'onOrderDetailsClick'",
                    "    },",
                    "    \"#orderStatusButton\": {",
                    "        click: 'openProcessOrder'",
                    "    },",
                    "    '#ProcessOrder':{",
                    "        click: 'processOrder'",
                    "    },",
                    "    '#OrderStatus':{",
                    "        change:'changeStatus'",
                    "    },",
                    "    '#CancelPurchOrder':{",
                    "        click:this.cancelPurchOrder",
                    "    },",
                    "    '#cmdPrint':{",
                    "        click:this.printLPO",
                    "    },",
                    "    '#cmdAddPrescription':{",
                    "        click:this.editPrescription",
                    "    },",
                    "    '#cmdCloseOders':{",
                    "        click:this.closeOrdersForm",
                    "    },",
                    "    '#cmdSaveItemLocation':{",
                    "        click:this.saveItemLocation",
                    "    }",
                    "",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "init",
            "designerId": "5a2c243e-c284-4b2e-883d-6d7ca49f0b63"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openOrdersForm",
                "implHandler": [
                    "var formsContainer=Ext.create(\"CarePortal.view.FormsContainer\",{});",
                    "var ordersform = Ext.create('CarePortal.view.OrdersForm', {});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(ordersform);",
                    "//Ext.Msg.alert('Test',centerContainer.getItemId());",
                    "",
                    "",
                    "// var ordersWindow=Ext.create('Ext.window.Window', {",
                    "//     title: 'Internal Orders',",
                    "//     resizable:false",
                    "// });",
                    "",
                    "// ordersWindow.add(ordersform);",
                    "// ordersWindow.show();",
                    ""
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openOrdersForm",
            "designerId": "8d406fc9-5115-4bdd-a09d-d95a3a63be56"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainview",
                "selector": "mainview",
                "xtype": "mainview"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "mainview",
            "designerId": "fe951f9e-3f20-46f8-94da-8099eea49006"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "orderstocks",
                "selector": "orderstocks",
                "xtype": "orderstocks"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "orderstocks",
            "designerId": "1b74c195-0ccb-4144-abbd-86ee28511675"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "ordersform",
                "selector": "ordersform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string"
            },
            "name": "ordersform",
            "designerId": "1f9d28f7-a8de-409e-8789-64a830b52fcb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openServiceOrders",
                "implHandler": [
                    "var formsContainer=Ext.create(\"CarePortal.view.ServiceOrders\",{});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(formsContainer);",
                    "        //Ext.Msg.alert('Test',centerContainer.getItemId());"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openServiceOrders",
            "designerId": "885025a0-bddd-405c-af95-bfb674e95333"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "serviceorders",
                "selector": "serviceorders",
                "xtype": "serviceorders"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "serviceorders",
            "designerId": "930b3dbd-5cbf-4a86-96eb-b7d4960252a2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "stocklevels",
                "selector": "stocklevels",
                "xtype": "stocklevels"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "stocklevels",
            "designerId": "8a5dea9a-21c0-42e8-ac32-bd0b8074f249"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openStockLevels",
                "implHandler": [
                    "var stockLevels=Ext.create(\"CarePortal.view.StockLevels\",{});",
                    "centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(stockLevels);",
                    "//Ext.Msg.alert('Test',centerContainer.getItemId());"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openStockLevels",
            "designerId": "1aa500f2-0eec-4cab-b1d4-a9b87c38dc56"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "openItemsList4",
                "implHandler": [
                    "// var storeLoc=button.up(\"panel\").down('#suppStore').getValue();",
                    "var itemsList=Ext.create(\"CarePortal.view.DrugsList\",{});",
                    "var ordersWindow=Ext.create('Ext.window.Window', {",
                    "    title: 'Drugs ans Supplies List',",
                    "    resizable:true",
                    "});",
                    "",
                    "// var itesmStore=Ext.data.StoreManager.lookup(\"ItemslistStore\");",
                    "// itesmStore.load({",
                    "// //     params: {",
                    "// //         storeLoc:storeLoc",
                    "// //     },",
                    "//     callback: function(records, operation, success) {",
                    "",
                    "//     },",
                    "//     scope: this",
                    "// });",
                    "",
                    "",
                    "ordersWindow.add(itemsList);",
                    "ordersWindow.show();",
                    "itemsList.down('#sourceID').setValue('Orders');",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openItemsList4",
            "designerId": "3fe8c226-bbdb-47e4-8af0-11ff4aa35b6e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "openItemsList",
                "implHandler": [
                    "// var storeLoc=button.up(\"panel\").down('#suppStore').getValue();",
                    "var itemsList=Ext.create(\"CarePortal.view.DrugsList\",{});",
                    "var ordersWindow=Ext.create('Ext.window.Window', {",
                    "    title: 'Drugs and Supplies List',",
                    "    resizable:false",
                    "});",
                    "",
                    "var drugsStore=Ext.data.StoreManager.lookup(\"DrugsList\");",
                    "drugsStore.load({",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});",
                    "",
                    "",
                    "ordersWindow.add(itemsList);",
                    "ordersWindow.show();",
                    "itemsList.down('#sourceID').setValue('Orders');",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openItemsList",
            "designerId": "e424e93a-3a85-41a3-81b1-7fc135ad8537"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "itemslist",
                "selector": "itemslist",
                "xtype": "itemslist"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "itemslist",
            "designerId": "99d7699f-4494-44a6-8f27-eb767e5de43a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "fn": "filterItems",
                "implHandler": [
                    "var grid = field.up('grid');",
                    "grid.store.clearFilter();",
                    "if (newValue) {",
                    "    var matcher = new RegExp(Ext.String.escapeRegex(newValue), \"i\");",
                    "    grid.store.filter({",
                    "        filterFn: function(item) {",
                    "            return matcher.test(item.get('Description')) ||",
                    "                matcher.test(item.get('PartCode'));",
                    "        }",
                    "    });",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "filterItems",
            "designerId": "d42b256b-d7d0-4055-a7d8-e020d4694449"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "fn": "setOrderNo",
                "implHandler": [
                    "var orderNo=this.getOrderNo('4');",
                    "",
                    "//this.getOrdersform().down('#orderDate').setValue(new Date());",
                    "//this.getOrdersfromsuppliers().down('#orderNo').setValue(orderNo);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setOrderNo",
            "designerId": "5e88b539-09e5-4129-bd28-2170fc2baaf8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "typeID"
                ],
                "fn": "getOrderNo",
                "implHandler": [
                    "var transNo=0;",
                    "Ext.Ajax.request({",
                    "    url: 'data/getDataFunctions.php?task=getTransNos',",
                    "    params: {",
                    "        typeID:typeID",
                    "    },",
                    "    success: function(response){",
                    "        var resp = Ext.JSON.decode(response.responseText);",
                    "        transNo=resp[0].transNo;",
                    "       if(typeID==4){",
                    "           //this.getOrdersfromsuppliers().down('#orderNo').setValue(transNo);",
                    "       }else if(typeID==3){",
                    "           //Ext.Msg.alert('Test',transNo);",
                    "           this.getIssuedrugs().down('#issuenumber').setValue(transNo);",
                    "       }",
                    "",
                    "    },",
                    "    failure:function(response){",
                    "        var resp = JSON.parse(response);",
                    "        Ext.Msg.alert('Error',resp.Error);",
                    "     },",
                    "    scope: this",
                    "});",
                    "",
                    "",
                    "return transNo;"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getOrderNo",
            "designerId": "cdd94c30-ec11-49b6-ad6b-9bddf29d1cd1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "options"
                ],
                "fn": "addSelectedItems",
                "implHandler": [
                    "var sourceID=this.getDrugslist().down('#sourceID').getValue();",
                    "if(sourceID==='Orders'){",
                    "    var store =Ext.data.StoreManager.lookup('DrugsList');",
                    "    var store1 =Ext.data.StoreManager.lookup('OrderStocksStore');",
                    "    store.remove(record);",
                    "    store1.add(record);",
                    "}else{",
                    "    var counter=this.getPrescriptionform().down(\"#counter\").getValue();",
                    "    var dosage=Ext.create(\"CarePortal.view.Dosage\",{});",
                    "    dosage.itemId=record.get('partcode');",
                    "",
                    "",
                    "    dosage.down('#partCode').setValue(record.get('PartCode'));",
                    "    dosage.down('#description').setValue(record.get('Description'));",
                    "    dosage.down('#qty').setValue(record.get('QtyInStore'));",
                    "    dosage.down('#unitCost').setValue(record.get('Price'));",
                    "    dosage.down('#dose').setValue(1);",
                    "    dosage.down('#itemNumber').setValue(counter);",
                    "",
                    "    var i=counter;",
                    "    dosage.down('#partCode').name='partCode'+ i;",
                    "    dosage.down('#description').name='description'+ i;",
                    "    dosage.down('#dose').name='dose'+ i ;",
                    "    dosage.down('#timesperday').name='timesperday'+ i;",
                    "    dosage.down('#days').name='days'+ i ;",
                    "    dosage.down('#total').name='total'+ i ;",
                    "    dosage.down('#comment').name='comment'+ i;",
                    "",
                    "",
                    "    newVar=parseInt(counter)+1;",
                    "",
                    "    this.getPrescriptionform().down('#prescDetails').add(dosage);",
                    "    this.getPrescriptionform().down(\"#counter\").setValue(newVar);",
                    "}",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "addSelectedItems",
            "designerId": "1dd819b7-9faf-4077-94b9-54b7c4c2da76"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveOrder",
                "implHandler": [
                    "var form = button.up('form').getForm(); // get the basic form",
                    "//var supplier=button.up('form').down('#Supplier').getValue();",
                    "var orderStore =Ext.data.StoreManager.lookup('OrderStocksStore');",
                    "var ordersRecord = orderStore.getRange();",
                    "",
                    "var gridData = Array();",
                    "",
                    "Ext.each(ordersRecord, function (record) {",
                    "    gridData.push(record.data);",
                    "});",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        params:{",
                    "            gridData: Ext.util.JSON.encode(gridData)",
                    "        },",
                    "        success: function(form, action) {",
                    "            Ext.Msg.alert(\"Orders\",\"Internal Order Saved Successfully\");",
                    "            form.reset();",
                    "            //orderStore.load({});",
                    "            orderStore.removeAll();",
                    "            orderStore.sync();",
                    "            this.setOrderNo(4);",
                    "",
                    "        },",
                    "        failure: function(form, action) {",
                    "            Ext.Msg.alert('Failed', 'Could not save Order. ');",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveOrder",
            "designerId": "2b068cc8-c581-46f7-9b09-323a3492bb08"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "record"
                ],
                "fn": "setDeptName",
                "implHandler": [
                    "// Ext.Msg.alert('test',record.get('Description'));",
                    "field.up('form').down('#deptName').setValue(record.get('Description'));"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setDeptName",
            "designerId": "7a7c47d1-33c7-4ab8-b0a8-f7ad6ae0c07a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "record"
                ],
                "fn": "setSuppName",
                "implHandler": [
                    "field.up('form').down('#suppName').setValue(record.get('Description'));"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setSuppName",
            "designerId": "950e555e-76d9-42f5-9dcb-7c677e1c4043"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "record"
                ],
                "fn": "selectPendingOrders",
                "implHandler": [
                    "var pendingOrders =Ext.data.StoreManager.lookup('OrdersServiceStore');",
                    "pendingOrders.load({",
                    "    params:{",
                    "        store:record.get('ID')",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "selectPendingOrders",
            "designerId": "5383cf07-1abb-43d3-8275-b7937aa02485"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "eOpts"
                ],
                "fn": "loadDetailedOrder",
                "implHandler": [
                    "var pendingOrders =Ext.data.StoreManager.lookup('OrderDetailStore');",
                    "pendingOrders.load({",
                    "    params:{",
                    "        store:record.get('sup_storeid'),",
                    "        req_no:record.get('req_no')",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "        gridpanel.up('form').loadRecord(record);",
                    "    },",
                    "    scope: this",
                    "});",
                    "",
                    "",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadDetailedOrder",
            "designerId": "2f45fc26-fe34-4b60-a7dd-826cc16e7315"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "serviceOrders",
                "implHandler": [
                    "var form = button.up('form').getForm(); // get the basic form",
                    "var orderStore =Ext.data.StoreManager.lookup('OrderDetailStore');",
                    "var ordersRecord = orderStore.getRange();",
                    "",
                    "var gridData = Array();",
                    "",
                    "Ext.each(ordersRecord, function (record) {",
                    "    gridData.push(record.data);",
                    "});",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        params:{",
                    "            gridData: Ext.util.JSON.encode(gridData)",
                    "        },",
                    "        success: function(form, action) {",
                    "            Ext.Msg.alert(\"Orders\",\"Order Serviced Successfully\");",
                    "            form.reset();",
                    "            orderStore.load({});",
                    "",
                    "        },",
                    "        failure: function(form, action) {",
                    "            Ext.Msg.alert('Failed', 'Could not Service Order. Error='+action.result.errors.clientNo);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "serviceOrders",
            "designerId": "e6ab78a1-59ee-4bfd-a33a-9ef5786ccca2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "eOpts"
                ],
                "fn": "loadLevelsForm",
                "implHandler": [
                    "gridpanel.up('form').loadRecord(record);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadLevelsForm",
            "designerId": "718f63cf-df4f-4db0-836c-744570a3bc0a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveStockAdjustments",
                "implHandler": [
                    "var form = button.up('form').getForm(); // get the basic form",
                    "var levelsStore =Ext.data.StoreManager.lookup('StockLevelsStore');",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function(form, action) {",
                    "            Ext.Msg.alert(\"Orders\",\"Stock level Updated Successfully\");",
                    "            form.reset();",
                    "            levelsStore.load({});",
                    "",
                    "        },",
                    "        failure: function(form, action) {",
                    "            Ext.Msg.alert('Failed', 'Could not Stock levels. Error='+action.result.errors.clientNo);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveStockAdjustments",
            "designerId": "094b47b2-6a24-483d-8ae4-65837c4f6338"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openPrescriptions",
                "implHandler": [
                    "//Ext.Msg.alert('Test','Test');",
                    "var presc=Ext.create(\"Pharmacy.view.Prescriptions\",{});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(presc);",
                    "",
                    "var pendingPresc =Ext.data.StoreManager.lookup('PendingPrescriptions');",
                    "pendingPresc.load({});"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openPrescriptions",
            "designerId": "35a7ae03-960a-42c9-b34f-502a3f493856"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "eOpts"
                ],
                "fn": "showPrescriptions",
                "implHandler": [
                    "// Ext.Msg.alert('Selections','You selected '+ record.get('Names'));",
                    "gridpanel.up('panel').up('panel').down('#Pid').setValue(record.get('Pid'));",
                    "gridpanel.up('panel').up('panel').down('#Names').setValue(record.get('Names'));",
                    "gridpanel.up('panel').up('panel').down('#EncounterNo').setValue(record.get('EncounterNo'));",
                    "gridpanel.up('panel').up('panel').down('#PrescribeDate').setValue(record.get('PrescribeDate'));",
                    "var prescDetails=gridpanel.up('panel').up('panel').down('#prescDetails');",
                    "",
                    "//**************************************************************************",
                    "//Populate the prescription items",
                    "//**************************************************************************",
                    "",
                    " var precStore=Ext.data.StoreManager.lookup(\"PrescriptionItemStore\");",
                    "",
                    "        var billSum=0;",
                    "        var data = [];",
                    "        precStore.load({",
                    "            params: {",
                    "                pid:record.get('Pid'),",
                    "                encNr:record.get('EncounterNo'),",
                    "                prescSource:\"Prescription\"",
                    "            },",
                    "            callback: function(records, operation, success) {",
                    "                var tpl=new Ext.XTemplate(",
                    "                    '<Table id=pharmacy>',",
                    "                    '<tr><td id=titles colspan=6>Prescriptions</td></tr>',",
                    "                    '<tr><th>Prescription No</th><th>Date</th><th>Description</th>',",
                    "                    ' <th>Dosage</th><th>Times Per Day</th><th>Days</th></tr>',",
                    "                    '<tpl for=\".\">',",
                    "                    '<tr><td>{Nr}</td><td>{PrescribeDate}</td><td>{Description}</td>',",
                    "                    '<td>{Dosage}</td><td>{TimesPerDay}</td><td>{Days}</td></tr>',",
                    "                    '<tr><td>Notes</td><td colspan=3 id=notes>{Notes}</td><td>Prescribed By:{Prescriber}</td><td><button id=edit>Edit</button><button id=delete>Delete</button></td></tr>',",
                    "                    '</tpl>',",
                    "                    '</table>'",
                    "                  );",
                    "",
                    "                    precStore.each(function(record) {",
                    "                        data.push(record.getData());",
                    "                        //billSum += record.get('Total');",
                    "                    });",
                    "",
                    "                    tpl.overwrite(prescDetails.body,data);",
                    "            },",
                    "            scope: this",
                    "        });",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showPrescriptions",
            "designerId": "3bac2d93-c2ba-4e9c-be06-70fe6774e882"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "prescriptions",
                "selector": "prescriptions",
                "xtype": "prescriptions"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "prescriptions",
            "designerId": "593304d0-c8ef-4ddd-a821-43e0cdf60a78"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "openDispensWindow",
                "implHandler": [
                    "var issueform = Ext.create('CarePortal.view.IssueDrugs', {});",
                    "var prescWindow=Ext.create('Ext.window.Window', {",
                    "     title: 'Prescribe Drugs'",
                    " });",
                    "",
                    "prescWindow.add(issueform);",
                    "prescWindow.show();",
                    "",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openDispensWindow",
            "designerId": "35edbf56-08e9-484e-a11d-5cfaa5768830"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "displayIssueForm",
                "implHandler": [
                    "var issueform = Ext.create('CarePortal.view.IssueDrugs', {});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(issueform);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "displayIssueForm",
            "designerId": "a67499fe-fae7-4a4f-9644-df66c29c8074"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "eOpts"
                ],
                "fn": "loadSelectedDrugs",
                "implHandler": [
                    "Ext.Msg.alert('Test',record.get('Pid'));"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadSelectedDrugs",
            "designerId": "976ae6f4-ce28-40b3-bd37-6a59fb319b02"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "createPrescription",
                "implHandler": [
                    "",
                    "//Ext.Msg.alert('Test',button.up('panel').getItemId());",
                    "",
                    "var prescForm=Ext.create(\"CarePortal.view.PrescriptionForm\",{});",
                    "var prescWindow=Ext.create('Ext.window.Window', {",
                    "    title: 'Prescribe Drugs',",
                    "    resizable:false",
                    "});",
                    "",
                    "prescWindow.add(prescForm);",
                    "prescWindow.show();",
                    "prescForm.down('#sourceID').setValue('Prescription');",
                    "prescForm.down('#pid').setValue(button.up('fieldset').down('#Pid').getValue());",
                    "prescForm.down('#names').setValue(button.up('fieldset').down('#Names').getValue());",
                    "prescForm.down('#encounterNo').setValue(button.up('fieldset').down('#EncounterNo').getValue());",
                    "// prescForm.down('#PrescribeDate').setValue(button.up('fieldset').down('#PrescribeDate').getValue());"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "createPrescription",
            "designerId": "e1d2cda4-4753-4dcc-b647-b1b8abb53c8c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "prescripionform",
                "selector": "prescripionform",
                "xtype": "prescripionform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "prescripionform",
            "designerId": "d12911d0-f65e-4864-8d29-d0827ba3c4d7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dosage",
                "selector": "dosage",
                "xtype": "dosage"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "dosage",
            "designerId": "0bc12b97-1e3e-47bc-b67a-ddcad4b37020"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "removeDose",
                "implHandler": [
                    "button.up('fieldset').destroy();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "removeDose",
            "designerId": "bc8e59b2-0daa-4863-a873-d23792333871"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "prescribe",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "var encNr= this.getPrescriptionform().down('#encounterNo').getValue();",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "     button.disable();",
                    "    form.submit({",
                    "        params:{",
                    "            encNr:encNr",
                    "        },",
                    "        success: function (form, action) {",
                    "           // Ext.Msg.alert('Thank you!', 'Saved Prescription Successfully.');",
                    "            //button.up('form').getForm().reset();",
                    "           // button.up('window').close();",
                    "            var prescriptionStore=Ext.data.StoreManager.lookup(\"PrescriptionStore\");",
                    "            prescriptionStore.load({",
                    "                params:{",
                    "                    //pid:record.get('PID'),",
                    "                    encNr:encNr,",
                    "                    prescSource:'Prescription'",
                    "",
                    "                },",
                    "                scope: this",
                    "            });",
                    "            //this.showPrescribed(encNr);",
                    "",
                    "            button.up('panel').up('panel').down('#prescDetails').removeAll();",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'There was a problem with the Prescription. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "    Ext.defer(function () {",
                    "            button.enable();",
                    "        }, 2000);",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "prescribe",
            "designerId": "e685ee82-2e43-491d-88ac-c7cb53601b14"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "fn": "getTotalDosage",
                "implHandler": [
                    "var dose=field.up('fieldset').down('#dose').getValue();",
                    "var timesperday=field.up('fieldset').down('#timesperday').getValue();",
                    "var days=field.up('fieldset').down('#days').getValue();",
                    "var total=parseInt(dose)*parseInt(timesperday)*parseInt(days);",
                    "",
                    "field.up('fieldset').down('#total').setValue(total);",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getTotalDosage",
            "designerId": "7eac2fe4-b6ef-4342-8d81-e25c7a05f6c0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "e",
                    "eOpts"
                ],
                "fn": "loadPatientDetails",
                "implHandler": [
                    "var patientStore=Ext.data.StoreManager.lookup(\"PatientDetailStore\");",
                    "",
                    "patientStore.load({",
                    "    params: {",
                    "        pid:field.getValue()",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "       // var resp = Ext.JSON.decode(response.responseText);",
                    "        names= records[0].data.Names;",
                    "        prescriber=records[0].data.Prescriber;",
                    "        prescdate=records[0].data.PrescribeDate;",
                    "        age=records[0].data.Age;",
                    "        payMode=records[0].data.Payment;",
                    "        encNr=records[0].data.EncounterNo;",
                    "        ",
                    "        this.getIssuedrugs().down('#Names').setValue(names);",
                    "        this.getIssuedrugs().down('#doctor').setValue(prescriber);",
                    "        this.getIssuedrugs().down('#prescribeDate').setValue(prescdate);",
                    "        this.getIssuedrugs().down('#age').setValue(age);",
                    "        this.getIssuedrugs().down('#payMode').setValue(payMode);",
                    "        this.getIssuedrugs().down('#encNr').setValue(encNr);",
                    "",
                    "    },",
                    "    scope: this",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadPatientDetails",
            "designerId": "d7d86663-fdc4-49e1-86bb-57d9d194b1a2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "issuedrugs",
                "selector": "issuedrugs",
                "xtype": "issuedrugs"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "issuedrugs",
            "designerId": "e94f6e43-c619-47b0-9c80-30aa86adfb66"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "combo",
                    "record",
                    "eOpts"
                ],
                "fn": "loadPrescriptionOrder",
                "implHandler": [
                    "//Ext.Msg.alert('Test',record.get('ID'));",
                    "var prescStore=Ext.data.StoreManager.lookup(\"PrescriptionItemStore\");",
                    "var encNr=this.getIssuedrugs().down('#encNr').getValue();",
                    "",
                    "prescStore.load({",
                    "    params: {",
                    "        encNr:encNr,",
                    "        store:record.get('ID'),",
                    "        prescSource:'Prescription'",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadPrescriptionOrder",
            "designerId": "6224e9bf-ebb6-407a-bacb-f2ac13fa754c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "issueDrugs",
                "implHandler": [
                    "",
                    "var form = button.up('form').getForm(); // get the basic form",
                    "var orderStore =Ext.data.StoreManager.lookup('PrescriptionItemStore');",
                    "var ordersRecord = orderStore.getRange();",
                    "",
                    "var gridData = Array();",
                    "",
                    "",
                    "Ext.each(ordersRecord, function (record) {",
                    "    gridData.push(record.data);",
                    "});",
                    "console.log(gridData);",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        params:{",
                    "            gridData: Ext.util.JSON.encode(gridData)",
                    "        },",
                    "        success: function(form, action) {",
                    "            Ext.Msg.alert(\"Prescription Order\",\"Drugs Issued Successfully\");",
                    "            form.reset();",
                    "            orderStore.removeAll();",
                    "            orderStore.sync();",
                    "",
                    "            var peddingPrescStore=Ext.data.StoreManager.lookup(\"PendingPrescriptions\");",
                    "            peddingPrescStore.load({});",
                    "",
                    "",
                    "        },",
                    "        failure: function(form, action) {",
                    "            Ext.Msg.alert('Failed', 'Could not save Order. Error='+action.result.errors.clientNo);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "issueDrugs",
            "designerId": "d107dbe8-50db-4ba2-9058-8131ee25f0ba"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openReturnOrders",
                "implHandler": [
                    "var returnform = Ext.create('Pharmacy.view.ReturnOrders', {});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(returnform);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openReturnOrders",
            "designerId": "d348ee2b-7ecd-42cb-945c-448c6d13dacc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "returnDrugs",
                "implHandler": [
                    "//Ext.Msg.alert('test','test');",
                    "var returnsStore=Ext.data.StoreManager.lookup('ReturnOrdersStore');",
                    "//var ordersRecord = returnsStore.getRange();",
                    "var requestparam=this.getReturnorders().down('#returnsparam').getValue();",
                    "var sourcePresc=this.getReturnorders().down('#prescSource').getValue();",
                    "var gridData = Array();",
                    "",
                    "var updatedRecords = this.getReturnorders().getStore().getUpdatedRecords();",
                    "params=[];",
                    "Ext.each(updatedRecords,function(record){",
                    " params.push(record.data);",
                    "});",
                    "",
                    "",
                    "returnsStore.proxy.extraParams = {",
                    "    selectedCount:params.length,",
                    "    pid:this.getReturnorders().down('#returnsparam').getValue()",
                    "",
                    "};",
                    "",
                    "returnsStore.sync({",
                    "    success: function(response){",
                    "        var resp = Ext.JSON.decode(response.responseText);",
                    "        Ext.Msg.alert('Update','Successfully returned drugs');",
                    "       // var returnsStore=Ext.data.StoreManager.lookup('BillStore');",
                    "        returnsStore.load({});",
                    "",
                    "    },",
                    "    failure:function(response){",
                    "        var resp = JSON.parse(response.responseText);",
                    "        Ext.Msg.alert('Error','Error Updating Bill');",
                    "",
                    "    }",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "returnDrugs",
            "designerId": "aae80ef7-cbfc-4426-83c6-3f507255a809"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "options"
                ],
                "fn": "loadDrugsToIssue",
                "implHandler": [
                    "//Ext.Msg.alert('Test',gridpanel.up('panel').up('panel').getItemId());",
                    "var currPanel=gridpanel.up('panel').up('panel').getItemId();",
                    "",
                    "if(currPanel=='prescriptions'){",
                    "    gridpanel.up('panel').up('panel').down('#Pid').setValue(record.get('Pid'));",
                    "    gridpanel.up('panel').up('panel').down('#Names').setValue(record.get('Names'));",
                    "    gridpanel.up('panel').up('panel').down('#EncounterNo').setValue(record.get('EncounterNo'));",
                    "    gridpanel.up('panel').up('panel').down('#PrescribeDate').setValue(record.get('PrescribeDate'));",
                    "    var prescDetails=gridpanel.up('panel').up('panel').down('#prescDetails');",
                    "",
                    "    //**************************************************************************",
                    "    //Populate the prescription items",
                    "    //**************************************************************************",
                    "",
                    "     var precStore=Ext.data.StoreManager.lookup(\"PrescriptionItemStore\");",
                    "",
                    "        var billSum=0;",
                    "        var data = [];",
                    "        precStore.load({",
                    "            params: {",
                    "                pid:record.get('Pid'),",
                    "                encNr:record.get('EncounterNo'),",
                    "                prescSource:\"Prescription\"",
                    "            },",
                    "            callback: function(records, operation, success) {",
                    "                var tpl=new Ext.XTemplate(",
                    "                    '<Table id=pharmacy>',",
                    "                    '<tr><td id=titles colspan=6>Prescriptions</td></tr>',",
                    "                    '<tr><th>Prescription No</th><th>Date</th><th>Description</th>',",
                    "                    ' <th>Dosage</th><th>Times Per Day</th><th>Days</th></tr>',",
                    "                    '<tpl for=\".\">',",
                    "                    '<tr><td>{Nr}</td><td>{PrescribeDate}</td><td>{Description}</td>',",
                    "                    '<td>{Dosage}</td><td>{TimesPerDay}</td><td>{Days}</td></tr>',",
                    "                    '<tr><td>Notes</td><td colspan=3 id=notes>{Notes}</td><td>Prescribed By:{Prescriber}</td><td><button id=edit>Edit</button><button id=delete>Delete</button></td></tr>',",
                    "                    '</tpl>',",
                    "                    '</table>'",
                    "                  );",
                    "",
                    "                    precStore.each(function(record) {",
                    "                        data.push(record.getData());",
                    "                        //billSum += record.get('Total');",
                    "                    });",
                    "",
                    "                    tpl.overwrite(prescDetails.body,data);",
                    "            },",
                    "            scope: this",
                    "        });",
                    "}else if(currPanel=='issueDrugs'){",
                    "    this.getIssuedrugs().down('#Pid').setValue(record.get('Pid'));",
                    "    this.getIssuedrugs().down('#Names').setValue(record.get('Names'));",
                    "    this.getIssuedrugs().down('#prescribeDate').setValue(record.get('PrescribeDate'));",
                    "    this.getIssuedrugs().down('#encNr').setValue(record.get('EncounterNo'));",
                    "    this.getIssuedrugs().down('#doctor').setValue(record.get('Prescriber'));",
                    "",
                    "    var patientStore=Ext.data.StoreManager.lookup(\"PatientDetailStore\");",
                    "",
                    "    patientStore.load({",
                    "        params: {",
                    "            pid:record.get('Pid'),",
                    "            encNr:record.get('EncounterNo'),",
                    "            nr:record.get('Nr')",
                    "        },",
                    "        callback: function(records, operation, success) {",
                    "           patientStore.each(function(record) {",
                    "               prescriber=record.data.Prescriber;",
                    "               age=record.get('Age');",
                    "               payMode=record.get('Payment');",
                    "               receiptNo=record.get('ReceiptNo');",
                    "               receiptAmount=record.get('ReceiptAmount');",
                    "            });",
                    "",
                    "        },",
                    "        scope: this",
                    "    });",
                    "            this.getIssuedrugs().down('#age').setValue(age);",
                    "            this.getIssuedrugs().down('#payMode').setValue(payMode);",
                    "            this.getIssuedrugs().down('#receiptNo').setValue(receiptNo);",
                    "            this.getIssuedrugs().down('#receiptAmount').setValue(receiptAmount);",
                    "",
                    "",
                    "var prescStore=Ext.data.StoreManager.lookup(\"PrescriptionItemStore\");",
                    "prescStore.load({",
                    "    params: {",
                    "        encNr:record.get('EncounterNo'),",
                    "        store:'Dispens',",
                    "        prescSource:'Prescription'",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});",
                    "}",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadDrugsToIssue",
            "designerId": "e7a739e7-15e8-43da-bb4d-7be07dfe6e39"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "previewDrugsToReturn",
                "implHandler": [
                    "var returnsStore =Ext.data.StoreManager.lookup('ReturnOrdersStore');",
                    "var requestparam=this.getReturnorders().down('#returnsparam').getValue();",
                    "var sourcePresc=this.getReturnorders().down('#prescSource').getValue();",
                    "var storeLoc=this.getReturnorders().down('#storeLoc').getValue();",
                    "returnsStore.load({",
                    "    params: {",
                    "        requestparam:requestparam,",
                    "        sourcePresc:sourcePresc,",
                    "        storeLoc:storeLoc",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "previewDrugsToReturn",
            "designerId": "fea39343-7962-4b48-85c0-23237683c41d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "returnorders",
                "selector": "returnorders",
                "xtype": "returnorders"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "returnorders",
            "designerId": "63f4bcd7-c4cd-4d32-9655-9e56b2500524"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "drugissuesreports",
                "selector": "drugsissuereports",
                "xtype": "drugissuesreports"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "drugissuesreports",
            "designerId": "1c16d357-7ba1-4ba1-b73e-7649e50cc78a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "previewIssuedDrugs",
                "implHandler": [
                    "var formsContainer=Ext.create(\"Pharmacy.view.DrugIssuesReports\",{});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(formsContainer);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "previewIssuedDrugs",
            "designerId": "8e2ad718-bb63-49ef-afde-0b212e52ee1c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "internalordersreport",
                "selector": "internalordersreport",
                "xtype": "internalordersreport"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "internalordersreport",
            "designerId": "34c0b478-6b09-4522-82bd-9abbad5d7d5d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "previewInteralOrders",
                "implHandler": [
                    "        var formsContainer=Ext.create(\"Pharmacy.view.InternalOrdersReport\",{});",
                    "        var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "        centerContainer.removeAll();",
                    "        centerContainer.add(formsContainer);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "previewInteralOrders",
            "designerId": "4bce01ae-5ca0-4c93-9483-a35a54262d4f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "stockadjustmentsreport",
                "selector": "stockadjustmentsreport",
                "xtype": "stockadjustmentsreport"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "stockadjustmentsreport",
            "designerId": "12a3b322-dca7-450f-9d6f-993ce767fed1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "previewStockAdjustments",
                "implHandler": [
                    "var formsContainer=Ext.create(\"Pharmacy.view.StockAdjustmentsReport\",{});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(formsContainer);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "previewStockAdjustments",
            "designerId": "955802f6-963e-4591-82c6-d8a6f8d02d81"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "onLaunch",
                "implHandler": null
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "onLaunch",
            "designerId": "6ab1cd43-2083-4ff2-ab9b-a34110740d08"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "valuationsreport",
                "selector": "valuationsreport",
                "xtype": "valuationsreport"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "valuationsreport",
            "designerId": "7e67d9a2-25ac-4d54-835c-075ff8077a63"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "stockmovementsreport",
                "selector": "stockmovementsreport",
                "xtype": "stockmovementsreport"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "stockmovementsreport",
            "designerId": "e1a4dd47-efcc-4efb-8364-5d6b3ed580f3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "previewMovements",
                "implHandler": [
                    "var formsContainer=Ext.create(\"Pharmacy.view.StockMovementsReport\",{});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(formsContainer);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "previewMovements",
            "designerId": "eb24e6e6-cd06-4963-9b20-b85007a2798d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "previewValuations",
                "implHandler": [
                    "var formsContainer=Ext.create(\"Pharmacy.view.ValuationsReport\",{});",
                    "var centerContainer=this.getMainview().down(\"container[region=center]\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(formsContainer);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "previewValuations",
            "designerId": "5623d045-e4bd-467d-a296-8a6c08c2a574"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "loadValuation",
                "implHandler": [
                    "Ext.Msg.alert('Test','test');",
                    "var valuationStore =Ext.data.StoreManager.lookup('ValuationStore');",
                    "var category=this.getDrugissuesreports().down('#itemCategory').getValue();",
                    "",
                    "valuationStore.load({",
                    "    params: {",
                    "        category:category",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadValuation",
            "designerId": "9d315b9b-c13c-4f20-a2e2-5823ecc8b171"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "cancelOrder",
                "implHandler": [
                    "       var orderNo=button.up('panel').down('#orderNo').getValue();",
                    "        Ext.Ajax.request({",
                    "            url: 'data/getDataFunctions.php?task=cancelOrder',",
                    "            params: {",
                    "                orderNo:orderNo",
                    "            },",
                    "            success: function(response){",
                    "                var resp = Ext.JSON.decode(response.responseText);",
                    "                Ext.Msg.alert('Order','Order No '+reqno+' Cancelled successfully');",
                    "            },",
                    "            failure:function(response){",
                    "                var resp = JSON.parse(response);",
                    "                Ext.Msg.alert('Error',resp.Error);",
                    "             },",
                    "            scope: this",
                    "        });",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "cancelOrder",
            "designerId": "e5e218fb-9a1d-4004-9d03-2a31c1e00cd1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "cancelPurchOrder",
                "implHandler": [
                    "       var orderNo=button.up('panel').down('#orderNo').getValue();",
                    "        Ext.Ajax.request({",
                    "            url: 'data/getDataFunctions.php?task=cancelPurchOrder',",
                    "            params: {",
                    "                orderNo:orderNo",
                    "            },",
                    "            success: function(response){",
                    "                var resp = Ext.JSON.decode(response.responseText);",
                    "                Ext.Msg.alert('Order','Order No '+orderNo+' Cancelled successfully');",
                    "            },",
                    "            failure:function(response){",
                    "                var resp = JSON.parse(response);",
                    "                Ext.Msg.alert('Error',resp.Error);",
                    "             },",
                    "            scope: this",
                    "        });",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "cancelPurchOrder",
            "designerId": "10f8c902-9028-489f-b0ff-ce065f28e997"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "fn": "setIssueNo",
                "implHandler": [
                    " var orderNo=this.getOrderNo('3');",
                    "",
                    " this.getIssuedrugs().down('#issuenumber').setValue(orderNo);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setIssueNo",
            "designerId": "0e26233a-33dc-414d-a163-99b8e39829d3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "e",
                    "options"
                ],
                "fn": "getPressedKey",
                "implHandler": [
                    "    if (e.getKey() == e.ENTER && field.getItemId()==='prescParams') {",
                    "     //   Ext.Msg.alert('Test',field.getItemId());",
                    "       this.searchPrescription();",
                    "    }else  if (e.getKey() == e.ENTER && field.getItemId()==='searchParam') {",
                    "     //   Ext.Msg.alert('Test',field.getItemId());",
                    "        this.searchItems();",
                    "    }else  if (e.getKey() == e.ENTER && field.getItemId()==='txtSearchReceipt') {",
                    "     //   Ext.Msg.alert('Test',field.getItemId());",
                    "        this.searchReceipt();",
                    "    }"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getPressedKey",
            "designerId": "6cbecf60-bd8b-48f5-934c-2e571c6c162a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "searchPrescription",
                "implHandler": [
                    "var searchParam=this.getBills().down('#prescParams').getValue();",
                    "var admSource=this.getBills().down('#admSource').getValue();",
                    "var prescStore =Ext.data.StoreManager.lookup('PendingPrescriptions');",
                    "",
                    "if(admSource=='1'){",
                    "    encounterClass=1;",
                    "}else{",
                    "    encounterClass=2;",
                    "}",
                    "",
                    "",
                    "prescStore.load({",
                    "    params: {",
                    "        prescParams: prescParams,",
                    "        encounterClass:encounterClass",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "searchPrescription",
            "designerId": "bf72fae1-f5e3-426c-ab86-92e16f453227"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field, newValue, oldValue, eOpts"
                ],
                "fn": "filterPrescriptions",
                "implHandler": [
                    "var grid = field.up('grid');",
                    "grid.store.clearFilter();",
                    "if (newValue) {",
                    "    var matcher = new RegExp(Ext.String.escapeRegex(newValue), \"i\");",
                    "    grid.store.filter({",
                    "        filterFn: function(item) {",
                    "            return matcher.test(item.get('Names')) ||",
                    "                matcher.test(item.get('Pid'));",
                    "        }",
                    "    });",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "filterPrescriptions",
            "designerId": "236a9837-edd2-433c-ad6f-05f5d3041aee"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "prescriptionform",
                "selector": "prescriptionform",
                "xtype": "prescriptionform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "prescriptionform",
            "designerId": "f6bdf2d6-f367-4c77-ad4c-2119333df198"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "pendingprescriptions",
                "selector": "pendingprescriptions",
                "xtype": "pendingprescriptions"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "pendingprescriptions",
            "designerId": "187d833e-9444-4796-af55-a7f0a6f766a0"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "prescriptions",
                "selector": "prescriptions",
                "xtype": "prescriptions"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "prescriptions",
            "designerId": "1889059d-9604-40b9-ba17-eeec2632e314"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "fn": "setOrderType",
                "implHandler": [
                    "//Ext.Msg.alert('Radio Selection',field.getValue().OrderType);",
                    " var orderNo=this.getOrderNo('3');",
                    "",
                    " this.getIssuedrugs().down('#issuenumber').setValue(orderNo);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setOrderType",
            "designerId": "ee5ae09c-224f-4179-8305-1eb60e4ce1b4"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "ordersfromsuppliers",
                "selector": "ordersfromsuppliers",
                "xtype": "ordersfromsuppliers"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "ordersfromsuppliers",
            "designerId": "5b1a9aa6-68aa-4901-853b-e81d669814e2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "newSupplier",
                "implHandler": [
                    "centerDetails=Ext.create(\"CarePortal.view.SupplierForm\",{});",
                    "  ",
                    "    var containterWindows=Ext.create('Ext.window.Window', {",
                    "        title: 'Suppliers Form',",
                    "        resizable:false,",
                    "        closable:true",
                    "    });",
                    "",
                    "    containterWindows.add(centerDetails);",
                    "    containterWindows.show();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "newSupplier",
            "designerId": "7fc7528a-d324-4581-bf23-190cee070238"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveSupplier",
                "implHandler": [
                    "supplierStore=Ext.data.StoreManager.lookup('SuppliersStore');",
                    "var form = button.up('panel').getForm();",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function(form, action) {",
                    "            Ext.Msg.alert(\"Supplier\",\"Supplier Saved Successfully\");",
                    "            form.reset();",
                    "            supplierStore.load({});",
                    "",
                    "        },",
                    "        failure: function(form, action) {",
                    "            Ext.Msg.alert('Failed', 'Could not save Supplier.');",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveSupplier",
            "designerId": "89d77388-7058-4fec-92a3-ad82be148578"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "supplierform",
                "selector": "supplierform",
                "xtype": "supplierform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "supplierform",
            "designerId": "f0a335e0-ed6f-4de5-8fa6-84e953223234"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "purchaseorders",
                "selector": "purchaseorders",
                "xtype": "purchaseorders"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "purchaseorders",
            "designerId": "340ee7df-1aee-436c-b96f-04ad09326541"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "createPurchOrder",
                "implHandler": [
                    "var purchOrdersForm=Ext.create(\"CarePortal.view.OrdersFromSuppliers\",{});",
                    "",
                    "var centerContainer=this.getViewport().down(\"#detailsPanel\");",
                    "centerContainer.removeAll();",
                    "",
                    "centerContainer.add(purchOrdersForm);",
                    "centerContainer.setTitle(\"Create Purchase Order\" );",
                    "",
                    "",
                    "var supStore =Ext.data.StoreManager.lookup('SuppliersStore');",
                    "supStore.load({});",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "createPurchOrder",
            "designerId": "48c08dc1-a75b-441b-b407-e96076c89e38"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "fn": "processOrder",
                "implHandler": [
                    "//  var rec = button.lookupViewModel().get('record');",
                    "Ext.Ajax.request({",
                    "     url: 'data/getDataFunctions.php?task=processOrder',",
                    "     params: {",
                    "         orderNo:button.up('form').down('#orderNo').getValue()",
                    "     },",
                    "     success: function(response){",
                    "         var resp = Ext.JSON.decode(response.responseText);",
                    "         Ext.Msg.alert('Order','Order No Processed successfully');",
                    "",
                    "         button.up('window').close();",
                    "",
                    "     },",
                    "     failure:function(response){",
                    "         var resp = JSON.parse(response);",
                    "         Ext.Msg.alert('Error',resp.Error);",
                    "     },",
                    "     scope: this",
                    " });"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "processOrder",
            "designerId": "7335dba9-81a2-4e78-9ef5-c465f6aa4521"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button, e, eOpts"
                ],
                "fn": "openProcessOrder",
                "implHandler": [
                    "var processForm=Ext.create(\"CarePortal.view.ProcessOrder\",{});",
                    "var ordersWindow=Ext.create('Ext.window.Window', {",
                    "    title: 'Process Order Form',",
                    "    resizable:false,",
                    "    closable:true",
                    "});",
                    "",
                    "ordersWindow.add(processForm);",
                    "ordersWindow.show();",
                    "",
                    "var rec = button.lookupViewModel().get('record');",
                    "orderNo=rec.get('OrderNo');",
                    "processForm.down('#orderNo').setValue(orderNo);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openProcessOrder",
            "designerId": "949c3edb-9c5f-4231-8895-77ee650c261a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "newValue,oldValue,eOpts"
                ],
                "fn": "changeStatus",
                "implHandler": [
                    "//Ext.Msg.alert('Radio Selection',field.getValue().OrderStatus);",
                    "//Ext.Msg.alert('Test',field.getValue());",
                    "if(field.getValue().OrderStatus=='Authorise'){",
                    "    field.up('form').down('#ProcessOrder').show();",
                    "    field.up('form').down('#CancelPurchOrder').hide();",
                    "}else if(field.getValue().OrderStatus=='Cancel'){",
                    "    field.up('form').down('#CancelPurchOrder').show();",
                    "    field.up('form').down('#ProcessOrder').hide();",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "changeStatus",
            "designerId": "a149e9de-f9d9-439e-a1d9-265c390229c4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "printLPO",
                "implHandler": [
                    "var rec = button.lookupViewModel().get('record');",
                    "orderNo=rec.get('OrderNo');",
                    "orderDate=rec.get('OrderDate');",
                    "",
                    "window.open('reports/LPO.php?orderNo=' + orderNo+'&OrderDate'+orderDate, \"Local Purchase Order\",",
                    "            \"menubar=no,toolbar=no,width=800,height=800,location=yes,resizable=yes,scrollbars=yes,status=yes\");",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "printLPO",
            "designerId": "a71083da-2e1a-4952-9e24-0300c6ad06c4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button,encNr"
                ],
                "fn": "showPrescribed",
                "implHandler": [
                    "var prescDetails=this.getPrescriptionform().down('#prescDetails');",
                    "",
                    "//**************************************************************************",
                    "//Populate the prescription items",
                    "//**************************************************************************",
                    "",
                    "var precStore=Ext.data.StoreManager.lookup(\"PrescriptionItemStore\");",
                    "",
                    "var billSum=0;",
                    "var data = [];",
                    "precStore.load({",
                    "    params: {",
                    "        pid:record.get('Pid'),",
                    "        encNr:record.get('EncounterNo'),",
                    "        prescSource:\"Prescription\"",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "        var tpl=new Ext.XTemplate(",
                    "            '<Table id=pharmacy>',",
                    "            '<tr><td id=titles colspan=6>Prescriptions</td></tr>',",
                    "            '<tr><th>Prescription No</th><th>Date</th><th>Description</th>',",
                    "            ' <th>Dosage</th><th>Times Per Day</th><th>Days</th></tr>',",
                    "            '<tpl for=\".\">',",
                    "            '<tr><td>{Nr}</td><td>{PrescribeDate}</td><td>{Description}</td>',",
                    "            '<td>{Dosage}</td><td>{TimesPerDay}</td><td>{Days}</td></tr>',",
                    "            '<tr><td>Notes</td><td colspan=3 id=notes>{Notes}</td><td>Prescribed By:{Prescriber}</td><td><button id=edit>Edit</button><button id=delete>Delete</button></td></tr>',",
                    "            '</tpl>',",
                    "            '</table>'",
                    "        );",
                    "",
                    "        precStore.each(function(record) {",
                    "            data.push(record.getData());",
                    "            //billSum += record.get('Total');",
                    "        });",
                    "",
                    "        tpl.overwrite(prescDetails.body,data);",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showPrescribed",
            "designerId": "a531297c-1fa7-4411-b62f-523984d633c9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "editPrescription",
                "implHandler": [
                    "var pid=button.up('form').down('#Pid').getValue();",
                    "var encNr=button.up('form').down('#encNr').getValue();",
                    "",
                    "var prescription=Ext.create(\"CarePortal.view.PrescriptionForm\",{});",
                    "var containterWindows=Ext.create('Ext.window.Window', {",
                    "    title:\"Prescriptions Entry Form\",",
                    "    resizable:false,",
                    "    closable:true",
                    "});",
                    "",
                    "containterWindows.add(prescription);",
                    "containterWindows.show();",
                    "",
                    "prescription.down('#pid').setValue(pid);",
                    "prescription.down('#names').setValue(button.up('form').down('#Names').getValue());",
                    "prescription.down('#encounterNo').setValue(encNr);",
                    "prescription.down('#Dob').setValue(button.up('form').down('#age').getValue());",
                    "",
                    "var prescriptionStore=Ext.data.StoreManager.lookup(\"PrescriptionStore\");",
                    "prescriptionStore.load({",
                    "    params:{",
                    "        pid:pid,",
                    "        encNr:encNr,",
                    "        prescSource:'Prescription'",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "editPrescription",
            "designerId": "00495139-0371-4042-80f8-7610279a1b6b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dosagelist",
                "selector": "dosagelist",
                "xtype": "dosagelist"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "dosagelist",
            "designerId": "dd08e41e-5431-45fb-9931-33276fd8a318"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "closeOrdersForm",
                "implHandler": [
                    "button.up('window').hide();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "closeOrdersForm",
            "designerId": "e8da30e3-2bdb-4d42-9c24-0020c95e1b1b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "onOrderDetailsClick",
                "implHandler": [
                    "var rec = button.lookupViewModel().get('record');",
                    "//  Ext.Msg.alert(\"Button clicked\", \"Hey! \" + rec.get('OrderNo'));",
                    "var PurchOrderDetails=Ext.create(\"CarePortal.view.PurchaseOrderDetails\",{});",
                    "var supplierDetailsPanel=PurchOrderDetails.down('#supplierDetails');",
                    "",
                    "centerContainer=this.getViewport().down(\"#detailsPanel\");",
                    "centerContainer.removeAll();",
                    "",
                    "centerContainer.add(PurchOrderDetails);",
                    "centerContainer.setTitle(\"Purchase Order Details\");",
                    "",
                    "PurchOrderDetails.down('#formStatus').setValue(\"PurchaseDetails\");",
                    "",
                    "var pendingOrders =Ext.data.StoreManager.lookup('PurchOrderItems');",
                    "pendingOrders.load({",
                    "    params:{",
                    "        orderNo:rec.get('OrderNo')",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});",
                    "",
                    "var data = [];",
                    "var supplierDetails =Ext.data.StoreManager.lookup('SuppliersStore');",
                    "supplierDetails.load({",
                    "    params:{",
                    "        supplierId:rec.get('supplierid')",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "           var tpl=new Ext.XTemplate(",
                    "                    '<Table id=notes>',",
                    "                    '<tr><td id=titles align=center style=\"font-size:16px;font-weight:bold;\">Vendors Details</td></tr>',",
                    "                    '<tpl for=\".\">',",
                    "                    '<tr><td>Supplier: {suppname}</td></tr>',",
                    "                    '<tr><td>Address: {address}  -  Location: {street}, {city}</td>',",
                    "                    '<tr><td>Phone:{mobile},{telephone}  ,  Email: {email}</td></tr>',",
                    "                    '<tr><td>Sales Person: {salesperson}</td></tr>',",
                    "                    '</tpl>',",
                    "                    '</table>'",
                    "                );",
                    "",
                    "                supplierDetails.each(function(record) {",
                    "                    data.push(record.getData());",
                    "                    //billSum += record.get('Total');",
                    "                });",
                    "",
                    "                tpl.overwrite(supplierDetailsPanel.body,data);",
                    "    },",
                    "    scope: this",
                    "});",
                    "",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "onOrderDetailsClick",
            "designerId": "e2ea0299-209f-4535-b006-8a44acb3c441"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveItemLocation",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "  ",
                    "        //var entryForm=form.getItemId();",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "         success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'The Vitals has been saved Successfully.');",
                    "            button.up('form').getForm().reset();",
                    "            button.up('window').hide();",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'Could not save Vitals. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveItemLocation",
            "designerId": "1ecc16b5-0484-4ac7-b7a5-61ed56d54013"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "drugslist",
                "selector": "drugslist",
                "xtype": "drugslist"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "drugslist",
            "designerId": "15958587-f9d6-4ff7-8c97-05d5c8166f73"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "viewport",
                "selector": "viewport",
                "xtype": "portal"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "viewport",
            "designerId": "b7b7c590-5dce-487f-b8da-b342c1d9000c"
        }
    ]
}