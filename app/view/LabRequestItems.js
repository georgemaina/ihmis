/*
 * File: app/view/LabRequestItems.js
 *
 * This file was generated by Sencha Architect version 4.3.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CarePortal.view.LabRequestItems', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.labrequestitems',

    requires: [
        'CarePortal.view.LabRequestItemsViewModel',
        'Ext.view.Table',
        'Ext.grid.column.Action',
        'Ext.selection.RowModel',
        'Ext.grid.plugin.CellEditing'
    ],

    viewModel: {
        type: 'labrequestitems'
    },
    height: 260,
    width: 960,
    columnLines: true,
    store: 'PendingTestsStore',

    columns: [
        {
            xtype: 'gridcolumn',
            width: 64,
            dataIndex: 'ID',
            text: 'ID'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'TestStatus',
            text: 'Test Status'
        },
        {
            xtype: 'gridcolumn',
            width: 70,
            dataIndex: 'LabNo',
            text: 'Lab No'
        },
        {
            xtype: 'gridcolumn',
            width: 208,
            dataIndex: 'Description',
            text: 'Description'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Notes',
            text: 'Notes'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Priority',
            text: 'Priority'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'RequestTime',
            text: 'Request Time'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'RequestedBy',
            text: 'Requested By'
        },
        {
            xtype: 'actioncolumn',
            itemId: 'deleteLabRequest',
            text: 'Remove',
            items: [
                {
                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                        view.getStore().remove(record);
                        Ext.Ajax.request({
                            url: 'data/getDataFunctions.php?task=deleteRecord',
                            params: {
                                ID:record.get("ID"),
                                tableName:'care_ke_labrequests',
                                idColumn:'ID',
                                batch_nr:record.get("ID")
                            },
                            success: function(response){
                                var resp = Ext.JSON.decode(response.responseText);
                                Ext.Msg.alert("Selected Column","Removed record with partcode "+record.get('PartCode'));

                                //this.getNotes(encounterNo);

                            },
                            failure: function (form, action) {
                                var jsonResp = Ext.decode(action.response.responseText);

                                Ext.Msg.alert('Failed', 'There was a problem with the Request. \n Error=' + jsonResp.error);
                            },
                            scope:this
                        });

                    },
                    icon: 'icons/delete1.jpg'
                }
            ]
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'PartCode',
            text: 'Part Code'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'EncounterNo',
            text: 'Encounter No'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'SampleCollectionTime',
            text: 'Sample Collection Time'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'SampleName',
            text: 'Sample Name'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'SampleCollectedBy',
            text: 'Sample Collected By'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'SampleReceivedTime',
            text: 'Sample Received Time'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'TestDoneby',
            text: 'Test Doneby'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'ResultsReceivedTime',
            text: 'Results Received Time'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'ResultsVerifiedTime',
            text: 'Results Verified Time'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Verifiedby',
            text: 'Verifiedby'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'ApprovedBy',
            text: 'Approved By'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'ApprovedTime',
            text: 'Approved Time'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'InputType',
            text: 'Input Type'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'Label',
            text: 'Label'
        }
    ],
    selModel: {
        selType: 'rowmodel'
    },
    plugins: [
        {
            ptype: 'cellediting'
        }
    ]

});