/*
 * File: app/view/StartShift.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CarePortal.view.StartShift', {
    extend: 'Ext.form.Panel',
    alias: 'widget.startshift',

    requires: [
        'CarePortal.view.StartShiftViewModel',
        'Ext.form.Label',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Date',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'startshift'
    },
    height: 247,
    padding: 5,
    width: 382,
    layout: 'absolute',
    bodyPadding: 10,
    url: 'data/getDataFunctions.php?task=startShift',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'label',
            x: 15,
            y: 5,
            height: 10,
            style: 'color:maroon; font-size:20px;font-weight:bold;',
            width: 395,
            text: 'Your are about to start a shift'
        },
        {
            xtype: 'combobox',
            x: 0,
            y: 30,
            itemId: 'cashpoint',
            fieldLabel: 'Cash Point',
            labelAlign: 'right',
            labelStyle: 'color:green; font-weight:bold;',
            name: 'CashPoint',
            value: 'R01',
            fieldStyle: 'color:red; font-weight:bold;',
            allowBlank: false,
            displayField: 'CashPoint',
            minChars: 2,
            queryMode: 'local',
            store: 'CashPointsStore',
            typeAhead: true,
            valueField: 'CashPoint'
        },
        {
            xtype: 'textfield',
            x: 0,
            y: 65,
            itemId: 'description',
            fieldLabel: 'Description',
            labelAlign: 'right',
            labelStyle: 'color:green; font-weight:bold;',
            name: 'Description',
            value: 'CASH POINT 1',
            fieldStyle: 'color:red; font-weight:bold;'
        },
        {
            xtype: 'textfield',
            x: 0,
            y: 100,
            itemId: 'cashier',
            fieldLabel: 'Cashier',
            labelAlign: 'right',
            labelStyle: 'color:green; font-weight:bold;',
            name: 'Cashier',
            fieldStyle: 'color:red; font-weight:bold;',
            listeners: {
                render: 'onCashierRender'
            }
        },
        {
            xtype: 'datefield',
            x: 0,
            y: 135,
            itemId: 'startdate',
            fieldLabel: 'Start Date',
            labelAlign: 'right',
            labelStyle: 'color:green; font-weight:bold;',
            name: 'StartDate',
            value: 'Ext.Date.format(new Date(), \'Y-m-d\')',
            fieldStyle: 'color:red; font-weight:bold;',
            allowBlank: false,
            listeners: {
                render: 'onStartdateRender'
            }
        },
        {
            xtype: 'textfield',
            x: 0,
            y: 170,
            itemId: 'starttime',
            fieldLabel: 'Start Time',
            labelAlign: 'right',
            labelStyle: 'color:green; font-weight:bold;',
            name: 'StartTime',
            fieldStyle: 'color:red; font-weight:bold;',
            listeners: {
                render: 'onStarttimeRender'
            }
        },
        {
            xtype: 'button',
            x: 140,
            y: 210,
            itemId: 'startShift',
            text: 'Start Shift'
        }
    ],

    onCashierRender: function(component, eOpts) {
        component.setValue(localStorage.getItem('UserName'));
    },

    onStartdateRender: function(component, eOpts) {
        var dt=new Date();
        Ext.Date.format(dt, 'H:i:s');
        component.setValue(Ext.Date.format(dt, 'Y-m-d'));
    },

    onStarttimeRender: function(component, eOpts) {
        var dt=new Date();
        Ext.Date.format(dt, 'H:i:s');
        component.setValue(Ext.Date.format(dt, 'H:i:s'));
    }

});