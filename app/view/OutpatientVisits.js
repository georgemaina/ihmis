/*
 * File: app/view/OutpatientVisits.js
 *
 * This file was generated by Sencha Architect version 4.3.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CarePortal.view.OutpatientVisits', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.outpatientvisits',

    requires: [
        'CarePortal.view.OutpatientListViewModel1',
        'Ext.toolbar.Paging',
        'Ext.form.FieldContainer',
        'Ext.form.field.Date',
        'Ext.button.Button',
        'Ext.form.field.ComboBox',
        'Ext.selection.RowModel',
        'Ext.grid.column.Action'
    ],

    viewModel: {
        type: 'outpatientvisits'
    },
    draggable: {
        moveOnDrag: false
    },
    frame: true,
    itemId: 'OutpatientVisits',
    scrollable: 'both',
    autoDestroy: false,
    columnLines: true,
    store: 'OPAdmissionsStore',

    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            width: 360,
            displayInfo: true,
            store: 'OPAdmissionsStore'
        },
        {
            xtype: 'fieldcontainer',
            dock: 'top',
            height: 47,
            width: 100,
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'textfield',
                    margins: '',
                    itemId: 'txtOpSearch',
                    margin: 5,
                    width: 370,
                    emptyText: 'Search by PId, Names'
                },
                {
                    xtype: 'datefield',
                    itemId: 'startDate',
                    margin: 5,
                    fieldStyle: 'color:#630921; font-weight:bold;',
                    emptyText: 'Start Date'
                },
                {
                    xtype: 'datefield',
                    itemId: 'endDate',
                    margin: 5,
                    fieldStyle: 'color:#630921; font-weight:bold;',
                    emptyText: 'End Date'
                },
                {
                    xtype: 'button',
                    itemId: 'cmdSearchOpVisits',
                    margin: 5,
                    width: 95,
                    iconCls: 'x-fa fa-search',
                    text: 'Search'
                },
                {
                    xtype: 'combobox',
                    itemId: 'departments',
                    margin: 5,
                    width: 219,
                    displayField: 'Description',
                    queryMode: 'local',
                    store: 'DepartmentsStore',
                    typeAhead: true,
                    valueField: 'Nr'
                }
            ]
        }
    ],
    columns: [
        {
            xtype: 'gridcolumn',
            width: 72,
            dataIndex: 'Pid',
            text: 'Pid'
        },
        {
            xtype: 'gridcolumn',
            width: 165,
            dataIndex: 'Names',
            text: 'Names'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if (value ==="CASH" || value=='-1') {
                    metaData.style = "background-color:" + "yellow" + ";font-weight:bold;color:red;";
                } else {
                    metaData.style = "background-color:" + "red" + ";font-weight:bold;color:white;";
                }
                return value;
            },
            width: 126,
            dataIndex: 'PaymentMode',
            text: 'Payment Mode'
        },
        {
            xtype: 'gridcolumn',
            width: 96,
            dataIndex: 'EncounterDate',
            text: 'Date'
        },
        {
            xtype: 'gridcolumn',
            width: 72,
            dataIndex: 'EncounterTime',
            text: 'Time'
        },
        {
            xtype: 'gridcolumn',
            width: 119,
            dataIndex: 'EncounterNo',
            text: 'Encounter No'
        },
        {
            xtype: 'gridcolumn',
            width: 179,
            dataIndex: 'Clinic',
            text: 'Clinic'
        },
        {
            xtype: 'gridcolumn',
            width: 72,
            dataIndex: 'Gender',
            text: 'Gender'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'DateOfBirth',
            text: 'Dob'
        },
        {
            xtype: 'gridcolumn',
            width: 53,
            dataIndex: 'Age',
            text: 'Age'
        },
        {
            xtype: 'actioncolumn',
            itemId: 'transferClinic',
            width: 90,
            align: 'center',
            text: 'Transfer',
            items: [
                {
                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                        if(r.get('Pid') === '') {
                            return 'x-hidden-visibility';
                        }
                    },
                    altText: 'Transfer Patient',
                    icon: 'icons/xchange.gif',
                    tooltip: 'Transfer Patient'
                }
            ]
        }
    ],
    selModel: {
        selType: 'rowmodel'
    }

});