/*
 * File: app/view/GeneralLedger.js
 *
 * This file was generated by Sencha Architect version 4.3.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CarePortal.view.GeneralLedger', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.generalledger',

    requires: [
        'CarePortal.view.GeneralLedgerViewModel',
        'Ext.view.Table',
        'Ext.grid.column.Column',
        'Ext.toolbar.Paging',
        'Ext.form.field.Text',
        'Ext.selection.RowModel'
    ],

    viewModel: {
        type: 'generalledger'
    },
    height: 446,
    itemId: 'generalledgers',
    width: 628,
    columnLines: true,
    store: 'GeneralLedgerStore',
    defaultListenerScope: true,

    columns: [
        {
            xtype: 'gridcolumn',
            width: 114,
            dataIndex: 'AccountCode',
            text: 'Account Code'
        },
        {
            xtype: 'gridcolumn',
            width: 222,
            dataIndex: 'AccountName',
            text: 'Account Name'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'AccountGroups',
            text: 'Account Groups'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Amount',
            text: 'Amount'
        }
    ],
    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            width: 360,
            displayInfo: true,
            store: 'GeneralLedgerStore'
        },
        {
            xtype: 'textfield',
            dock: 'top',
            itemId: 'txtSearchGL',
            width: 100,
            emptyText: 'Find account by name or code'
        }
    ],
    selModel: {
        selType: 'rowmodel'
    },
    listeners: {
        afterrender: 'onGeneralledgersAfterRender'
    },

    onGeneralledgersAfterRender: function(component, eOpts) {
        var glStore=Ext.data.StoreManager.lookup('GeneralLedgerStore');
        glStore.load({});
    }

});