/*
 * File: app/view/ServicesProcedures.js
 *
 * This file was generated by Sencha Architect version 4.3.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CarePortal.view.ServicesProcedures', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.servicesprocedures',

    requires: [
        'CarePortal.view.ServicesProceduresViewModel',
        'Ext.view.Table',
        'Ext.toolbar.Paging',
        'Ext.grid.column.Action'
    ],

    viewModel: {
        type: 'servicesprocedures'
    },
    itemId: 'servicesGrid',
    store: 'ProceduresAndServices',

    columns: [
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'ID',
            text: 'ID'
        },
        {
            xtype: 'gridcolumn',
            width: 119,
            dataIndex: 'Status',
            text: 'Status'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'Batch_Nr',
            text: 'BatchNr'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'Batch_Nr',
            text: 'Encounter Nr'
        },
        {
            xtype: 'gridcolumn',
            width: 227,
            dataIndex: 'Description',
            text: 'Description'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Price',
            text: 'Price'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Qty',
            text: 'Qty'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Total',
            text: 'Total'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'InputDate',
            text: 'Input Date'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'PartCode',
            text: 'Part Code'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'InputBy',
            text: 'Input By'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'Departmant',
            text: 'Departmant'
        },
        {
            xtype: 'actioncolumn',
            text: 'Remove',
            items: [
                {
                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                        view.getStore().remove(record);
                        Ext.Ajax.request({
                            url: 'data/getDataFunctions.php?task=deleteRecord',
                            params: {
                                ID:record.get("ID"),
                                tableName:'care_encounter_procedure',
                                idColumn:'batch_nr',
                                batch_nr:record.get('Batch_Nr')
                            },
                            success: function(response){
                                var resp = Ext.JSON.decode(response.responseText);
                                Ext.Msg.alert("Success","Removed record with partcode "+record.get('PartCode'));

                                //this.getNotes(encounterNo);

                            },
                            failure: function (form, action) {
                                var jsonResp = Ext.decode(action.response.responseText);

                                Ext.Msg.alert('Failed', 'There was a problem with the Request. \n Error=' + jsonResp.error);
                            },
                            scope:this
                        });


                    },
                    icon: 'icons/delete1.jpg'
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            width: 360,
            displayInfo: true,
            store: 'ProceduresAndServices'
        }
    ]

});