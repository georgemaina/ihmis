{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "laboratory",
        "designer|userClassName": "Laboratory",
        "models": [
            "PatientList",
            "LabParams",
            "StaffsList",
            "Specimens",
            "PatientStatus",
            "LaboratoryResults",
            "LabTests",
            "PendingLabTests"
        ],
        "stores": [
            "PatientsListStore",
            "LabParamsStore",
            "PendingTestsStore",
            "StaffList",
            "SpecimenStore",
            "LabResultsStore"
        ],
        "views": [
            "MainView",
            "WorkFlows",
            "Patientlists",
            "PendingResults",
            "FullHaemogram",
            "ResultsForm",
            "Urinalysis",
            "StoolOCParasite",
            "UsersForm",
            "AncProfile",
            "LabResultsGrid",
            "LabResults",
            "LaboratoryParams",
            "ParamsForm",
            "EditResults",
            "LaboratoryStaff",
            "ReportsForm",
            "NewStaff",
            "AllLabTests",
            "LabItems",
            "LabTests"
        ]
    },
    "configAlternates": {
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "models": "typedarray",
        "stores": "typedarray",
        "views": "typedarray"
    },
    "name": "MyController",
    "designerId": "51d553ca-53b5-4bae-89ee-62af1a934777",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "this.control({",
                    "    '#mnuPending':{",
                    "        click:this.openPendinglist",
                    "    },",
                    "    '#patientsGrid':{",
                    "        itemclick:this.getSelectedPatient",
                    "    },",
                    "    '#mnuWorkflow':{",
                    "        click:this.openWorkFlow",
                    "    },",
                    "    '#btnSpecimenCollection':{",
                    "        afterrender:this.collectSpecimen",
                    "    },",
                    "    '#cmdClose':{",
                    "        click:this.close",
                    "    },",
                    "    '#cmdSaveSpecimen':{",
                    "        click:this.saveSpecimenCollection",
                    "    },",
                    "    '#btnSpecimenReceived':{",
                    "        afterrender:this.receiveSpecimen",
                    "    },",
                    "    '#cmdSaveReceiver':{",
                    "        click:this.saveSpecimenReceive",
                    "    },",
                    "    '#btnEnterResults':{",
                    "        afterrender:this.enterResults",
                    "    },",
                    "    '#cmdSaveResults':{",
                    "        click:this.saveLabResults",
                    "    },",
                    "    '#mnuResults':{",
                    "        click:this.openResultsPanel",
                    "    },",
                    "    '#btnVerifyResults':{",
                    "        afterrender:this.openVerifyResults",
                    "    },",
                    "    '#cmdVerifyResults':{",
                    "        click:this.verifyResults",
                    "    },",
                    "    '#btnApproveResults':{",
                    "        afterrender:this.openApproveResults",
                    "    },",
                    "    '#cmdApproveResults':{",
                    "        click:this.approveResults",
                    "    },",
                    "    '#mnuStaff':{",
                    "        click:this.openStaffList",
                    "    },",
                    "    '#mnuLabParams':{",
                    "        click:this.openLabParams",
                    "    },",
                    "    '#cmdNewParams':{",
                    "        click:this.openParamsForm",
                    "    },",
                    "    '#mnuEditResult':{",
                    "        click:this.openEditResults",
                    "    },",
                    "    '#cmdEditResults':{",
                    "        click:this.openResultsForm",
                    "    },",
                    "    '#cmdNewStaff':{",
                    "        click:this.openNewStaff",
                    "    },",
                    "    '#cmdSaveStaff':{",
                    "        click:this.saveStaff",
                    "    },",
                    "    '#staffListGrid':{",
                    "        itemClick:this.loadStaffDetails",
                    "    },",
                    "    '#mnuReportForm':{",
                    "        click:this.openReportForm",
                    "    },",
                    "    '#cmdPrintReport':{",
                    "        click:this.printLabReport",
                    "    },",
                    "    '#resultsGlid actioncolumn[id=addSamples]':{",
                    "        click:this.addSamples",
                    "    },",
                    "    '#fullHaemogram':{",
                    "        afterrender:this.loadParamValues",
                    "    },",
                    "    '#cmdSaveLabRights':{",
                    "        click:this.updateUserRights",
                    "    },",
                    "    '#mnuLabTests':{",
                    "        click:this.openLabTests",
                    "    },",
                    "    '#labTestsGrid':{",
                    "        itemdblclick:this.loadTests",
                    "    },",
                    "    '#cmdCloseResultsForm':{",
                    "        click:this.closeResultsForm",
                    "    },",
                    "    '#labParamsGrid':{",
                    "        itemdblclick:this.editLaboratory",
                    "    },",
                    "    '#cmdSaveParams':{",
                    "        click:this.saveLabParams",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "init",
            "designerId": "bb863acd-8466-4f16-99b5-a1497c4a07a6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "pendingresults",
                "selector": "pendingresults",
                "xtype": "pendingresults"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "pendingresults",
            "designerId": "bb67dd6e-f52a-4bee-a9c0-792d921db1fd"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "workflows",
                "selector": "workflows",
                "xtype": "workflows"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "workflows",
            "designerId": "c8652ba5-024a-429f-9018-ea8b06a44a74"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openPendinglist",
                "implHandler": [
                    "pendingResults=Ext.create(\"Lab.view.PendingResults\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "//title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "",
                    "centerContainer.add(pendingResults);",
                    "//title.down('#title').setValue('Pending Laboratory Requests');",
                    ""
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openPendinglist",
            "designerId": "2d63d542-f6f5-4345-88d4-9904b1fe8888"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "viewport",
                "selector": "viewport",
                "xtype": "mainview"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "viewport",
            "designerId": "9a9d8fc1-9b6f-4fe7-96cd-97ee0264bdc8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "options"
                ],
                "fn": "getSelectedPatient",
                "implHandler": [
                    "var currPanel=gridpanel.up('panel').up('panel').getItemId();",
                    "//Ext.Msg.alert('Test','ward No is '+gridpanel.up('panel').up('panel').getItemId());",
                    "",
                    "if(record.get('LabNo')!==''){",
                    "  //   var columns = grid.getView().headerCt.getGridColumns();",
                    "    //Ext.Msg.alert('Test','ward No is '+gridpanel.up('panel').up('panel').getItemId());",
                    "",
                    "",
                    "    if(currPanel==='workflows'){",
                    "        this.getWorkflows().down('#pid').setValue(record.get('Pid'));",
                    "        this.getWorkflows().down('#encounterno').setValue(record.get('EncounterNo'));",
                    "        this.getWorkflows().down('#fileno').setValue(record.get('FileNo'));",
                    "        this.getWorkflows().down('#names').setValue(record.get('Names'));",
                    "        this.getWorkflows().down('#sex').setValue(record.get('Sex'));",
                    "        this.getWorkflows().down('#dob').setValue(record.get('Dob'));",
                    "        this.getWorkflows().down('#createid').setValue(record.get('CreateID'));",
                    "        this.getWorkflows().down('#labno').setValue(record.get('LabNo'));",
                    "        this.getWorkflows().down('#priority').setValue(record.get('Priority'));",
                    "        this.getWorkflows().down('#paymode').setValue(record.get('PayMode'));",
                    "",
                    "        var pendingTests=Ext.data.StoreManager.lookup(\"PendingTestsStore\");",
                    "             pendingTests.load({",
                    "                params: {",
                    "                    labNo:record.get('LabNo')",
                    "                },",
                    "                callback: function(records, operation, success) {",
                    "",
                    "                },",
                    "                scope: this",
                    "            });",
                    "",
                    "    var statusPanel=this.getWorkflows().down(\"#statusPanel\");",
                    "    var patientStatus=Ext.data.StoreManager.lookup(\"PatientStatusStore\");",
                    "    var data = [];",
                    "",
                    "    patientStatus.load({",
                    "        params: {",
                    "            labNo:record.get('LabNo')",
                    "        },",
                    "        callback: function(records, operation, success) {",
                    "            var tpl=new Ext.XTemplate(",
                    "                '<Table id=vitals>',",
                    "                '<tr><td colspan=3 class=titles>Status of Lab Tests</td></tr>',",
                    "                '<tr>',",
                    "                '<th>UpdateTime</th>',",
                    "                '<th>Status</th><th>InputBy</th></tr>',",
                    "                '<tpl for=\".\">',",
                    "                '<tr>',",
                    "                '<td style=\"width:120px;\"><div>{UpdateTime}</div></td>',",
                    "                '<td style=\"width:150px;\">{Status}</td><td>{InputBy}</td>',",
                    "                '</tr>',",
                    "                '</tpl>',",
                    "                '</table>'",
                    "            );",
                    "",
                    "",
                    "            patientStatus.each(function(record) {",
                    "                data.push(record.getData());",
                    "            });",
                    "",
                    "            tpl.overwrite(statusPanel.body,data);",
                    "        },",
                    "        scope: this",
                    "    });",
                    "",
                    "    }else if(currPanel==='LabResults'){",
                    "        this.getLabresults().down('#pid').setValue(record.get('Pid'));",
                    "        this.getLabresults().down('#encounterno').setValue(record.get('EncounterNo'));",
                    "        this.getLabresults().down('#fileno').setValue(record.get('FileNo'));",
                    "        this.getLabresults().down('#names').setValue(record.get('Names'));",
                    "        this.getLabresults().down('#sex').setValue(record.get('Sex'));",
                    "        this.getLabresults().down('#dob').setValue(record.get('Dob'));",
                    "        this.getLabresults().down('#createid').setValue(record.get('CreateID'));",
                    "        this.getLabresults().down('#labno').setValue(record.get('LabNo'));",
                    "        this.getLabresults().down('#priority').setValue(record.get('Priority'));",
                    "        this.getLabresults().down('#paymode').setValue(record.get('PayMode'));",
                    "        this.getLabresults(record.get('LabNo'));",
                    "",
                    "            var resultsPanel=this.getLabresults().down(\"#resultsPanel\");",
                    "            var resultsStore=Ext.data.StoreManager.lookup(\"LabResultsStore\");",
                    "            var data = [];",
                    "",
                    "            resultsStore.load({",
                    "                params: {",
                    "                    labNo:record.get('LabNo')",
                    "                },",
                    "                callback: function(records, operation, success) {",
                    "                    var tpl=new Ext.XTemplate(",
                    "                        '<Table id=vitals>',",
                    "                        '<tr><td colspan=3 class=titles>Laboratory Results</td></tr>',",
                    "                        '<tr>',",
                    "                        '<th>TestName</th>',",
                    "                        '<th>ResultName</th><th>ResultsValue</th><th>LowerRange</th><th>UpperRange</th></tr>',",
                    "                        '<tpl for=\".\">',",
                    "                        '<tr>',",
                    "                        '<td style=\"width:120px;\"><div>{TestName}</div></td>',",
                    "                        '<td>{ResultName}</td><td>{ResultsValue}</td><td>{LowerRange}</td><td>{UpperRange}</td>',",
                    "                        '</tr>',",
                    "                        '</tpl>',",
                    "                        '</table>'",
                    "                    );",
                    "",
                    "",
                    "                    resultsStore.each(function(record) {",
                    "                        data.push(record.getData());",
                    "                    });",
                    "",
                    "                    tpl.overwrite(resultsPanel.body,data);",
                    "                },",
                    "                scope: this",
                    "            });",
                    "",
                    "    }else if(currPanel==='EditResults'){",
                    "        var labno=record.get('LabNo');",
                    "        var resultsStore=Ext.data.StoreManager.lookup(\"LabResultsStore\");",
                    "        resultsStore.load({",
                    "            params:{",
                    "                labNo:labno",
                    "            },",
                    "            callback: function(records, operation, success) {",
                    "",
                    "            }",
                    "        });",
                    "",
                    "        var pendingStore=Ext.data.StoreManager.lookup(\"PendingTestsStore\");",
                    "        pendingStore.load({",
                    "            params:{",
                    "                labNo:labno",
                    "            },",
                    "            callback: function(records, operation, success) {",
                    "",
                    "            }",
                    "        });",
                    "    }else{",
                    "        this.getPendingresults().down('#pid').setValue(record.get('Pid'));",
                    "        this.getPendingresults().down('#encounterno').setValue(record.get('EncounterNo'));",
                    "        this.getPendingresults().down('#fileno').setValue(record.get('FileNo'));",
                    "        this.getPendingresults().down('#names').setValue(record.get('Names'));",
                    "        this.getPendingresults().down('#sex').setValue(record.get('Sex'));",
                    "        this.getPendingresults().down('#dob').setValue(record.get('Dob'));",
                    "        this.getPendingresults().down('#createid').setValue(record.get('CreateID'));",
                    "        this.getPendingresults().down('#labno').setValue(record.get('LabNo'));",
                    "        this.getPendingresults().down('#priority').setValue(record.get('Priority'));",
                    "        this.getPendingresults().down('#paymode').setValue(record.get('PayMode'));",
                    "        this.loadPendingTests(record.get('LabNo'));",
                    "    }",
                    "",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getSelectedPatient",
            "designerId": "c90f57f3-2dcf-4d3b-adaf-8aaebab5ecd7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "labNo"
                ],
                "fn": "loadPendingTests",
                "implHandler": [
                    "",
                    "var resultsPanel=this.getPendingresults().down(\"#testStatus\");",
                    "var pendingTests=Ext.data.StoreManager.lookup(\"PendingTestsStore\");",
                    "var data = [];",
                    "",
                    "pendingTests.load({",
                    "    params: {",
                    "        labNo:labNo",
                    "    },",
                    "    callback: function(records, operation, success) {",
                    "        var tpl=new Ext.XTemplate(",
                    "            '<Table id=pendingtests>',",
                    "            '<tr><td colspan=4 class=titles>Pending Lab Tests</td></tr>',",
                    "            '<tr>',",
                    "            '<th>Description</th>',",
                    "            '<th>Status</th></tr>',",
                    "            '<tpl for=\".\">',",
                    "            '<tr>',",
                    "            '<td style=\"width:150px;\"><div class=content>{Description}</div></td>',",
                    "            '<td>{TestStatus}</td>',",
                    "            '</tr>',",
                    "            '</tpl>',",
                    "            '</table>'",
                    "        );",
                    "",
                    "",
                    "",
                    "        pendingTests.each(function(record) {",
                    "            data.push(record.getData());",
                    "        });",
                    "",
                    "        tpl.overwrite(resultsPanel.body,data);",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadPendingTests",
            "designerId": "1e171467-73cd-449a-999d-676844749a39"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openWorkFlow",
                "implHandler": [
                    "var workFlow=Ext.create(\"CarePortal.view.WorkFlows\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "//title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "",
                    "centerContainer.add(workFlow);",
                    "//this.getViewport().down('#title').setValue('LABORATORY MODULE:  Workflows form');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openWorkFlow",
            "designerId": "37fd424e-9857-4ed7-90c0-928a71dbdf5e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "fn": "collectSpecimen",
                "implHandler": [
                    "var specimen=Ext.create(\"CarePortal.view.SpecimenCollection\",{});",
                    "",
                    "component.getEl().on('click', function() {",
                    "  Ext.Ajax.request(",
                    "     {",
                    "         // waitMsg: 'Saving changes...',",
                    "         url: 'data/getDataFunctions.php?task=checkUserAccess',",
                    "         params: {",
                    "             activity: 'TakeSamples'",
                    "         },",
                    "         success: function(response, options) {",
                    "             //return true;",
                    "              var strErr=Ext.decode(response.responseText);",
                    "                 //Ext.Msg.alert('Response',strErr.Resp);",
                    "                if(strErr.Resp==='Access'){",
                    "                    var containterWindows=Ext.create('Ext.window.Window', {",
                    "                        title:\"Speciment Collection\",",
                    "                        resizable:false,",
                    "                        closable:true",
                    "                    });",
                    "",
                    "                    specimen.down('#encNr').setValue(component.up('panel').down('#encounterno').getValue());",
                    "                    specimen.down('#labNo').setValue(component.up('panel').down('#labno').getValue());",
                    "                    ",
                    "                     var specimenStore=Ext.data.StoreManager.lookup(\"SpecimenStore\");",
                    "                        specimenStore.load({});",
                    "                    ",
                    "                    containterWindows.add(specimen);",
                    "                    containterWindows.show();",
                    "                }else{",
                    "                     Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Collect Specimen');",
                    "                }",
                    "",
                    "         },",
                    "         failure: function(response, options) {",
                    "             Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Collect Specimen');",
                    "         }",
                    "     }",
                    " );",
                    "",
                    "",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "collectSpecimen",
            "designerId": "a4747017-893d-4859-b00d-80de48eb2711"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "close",
                "implHandler": [
                    "button.up('window').close();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "close",
            "designerId": "1aef15ab-6542-4790-9184-ba8714ce28bb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveSpecimenCollection",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'The lab Specimen Collected Successfully.');",
                    "            button.up('form').getForm().reset();",
                    "            button.up('window').close();",
                    "",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "            this.getWorkflows().down('#btnSpecimenCollection').setSrc('resources/images/specime_collection_done.png');",
                    "            Ext.Msg.alert('Failed', 'There was a problem Saving Sample Collection. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveSpecimenCollection",
            "designerId": "60002413-e1f8-4bb5-970c-298b2601912e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "fn": "receiveSpecimen",
                "implHandler": [
                    "var specimen=Ext.create(\"CarePortal.view.SpecimenReceived\",{});",
                    "component.getEl().on('click', function() {",
                    "Ext.Ajax.request(",
                    "     {",
                    "         // waitMsg: 'Saving changes...',",
                    "         url: 'data/getDataFunctions.php?task=checkUserAccess',",
                    "         params: {",
                    "             activity: 'ReceiveSamples'",
                    "         },",
                    "         success: function(response, options) {",
                    "             //return true;",
                    "              var strErr=Ext.decode(response.responseText);",
                    "                // Ext.Msg.alert('Response',strErr.Resp);",
                    "                if(strErr.Resp==='Access'){",
                    "                    var containterWindows=Ext.create('Ext.window.Window', {",
                    "                        title:\"Speciment Received\",",
                    "                        resizable:false,",
                    "                        closable:true",
                    "                    });",
                    "                    specimen.down('#encNr').setValue(component.up('panel').down('#encounterno').getValue());",
                    "                    specimen.down('#labNo').setValue(component.up('panel').down('#labno').getValue());",
                    "",
                    "                    containterWindows.add(specimen);",
                    "                    containterWindows.show();",
                    "                }else{",
                    "                     Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Collect Specimen');",
                    "                }",
                    "",
                    "         },",
                    "         failure: function(response, options) {",
                    "             Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Collect Specimen');",
                    "         }",
                    "     }",
                    " );",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "receiveSpecimen",
            "designerId": "b90bf644-3ed9-4ed4-ae67-f646eed74b1a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveSpecimenReceive",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'Sample Received Successfully.');",
                    "            button.up('form').getForm().reset();",
                    "            button.up('window').close();",
                    "",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'Problem saving sample received form. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveSpecimenReceive",
            "designerId": "68b3deff-73b9-4687-bdd4-20a89d2cf7ef"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "fn": "enterResults",
                "implHandler": [
                    "var grid=component.up('panel').up('panel').down('#resultsGlid');",
                    "//var restCrl=component.up('panel').up('panel').down('#resultFields');",
                    "// var ctrls2;",
                    "var results=Ext.create(\"CarePortal.view.ResultsForm\",{});",
                    "//var fullHaemogram=Ext.create(\"CarePortal.view.FullHaemogram\",{});",
                    "var StoolOCParasite=Ext.create(\"CarePortal.view.FullHaemogram\",{});",
                    "var Urinalysis=Ext.create(\"CarePortal.view.Urinalysis\",{});",
                    "var AncProfile=Ext.create(\"CarePortal.view.AncProfile\",{});",
                    "",
                    "",
                    "var restCrl=results.down('#resultsControl');",
                    "",
                    "component.getEl().on('click', function() {",
                    "    Ext.Ajax.request(",
                    "     {",
                    "         // waitMsg: 'Saving changes...',",
                    "         url: 'data/getDataFunctions.php?task=checkUserAccess',",
                    "         params: {",
                    "             activity: 'EnterResults'",
                    "         },",
                    "         success: function(response, options) {",
                    "             //return true;",
                    "              var strErr=Ext.decode(response.responseText);",
                    "                // Ext.Msg.alert('Response',strErr.Resp);",
                    "                if(strErr.Resp==='Access'){",
                    "                   var containterWindows=Ext.create('Ext.window.Window', {",
                    "                        title:'Results Entry',",
                    "                        resizable:false,",
                    "                        closable:false",
                    "                    });",
                    "                    containterWindows.add(results);",
                    "                    containterWindows.show();",
                    "                   //  containterWindows.removeAll();",
                    "                    restCrl.removeAll();",
                    "                    grid.getStore().each(function(record) {",
                    "                        if(record.get('InputType')==='input_box'){",
                    "                            restCrl.add(new Ext.form.TextField({",
                    "                                fieldLabel: record.get('Description'),",
                    "                                name: record.get('PartCode')",
                    "                            }));",
                    "                        }",
                    "",
                    "                       if(record.get('InputType')==='group_field'){",
                    "                            console.log(record.get('Label'));",
                    "                           restCrl.add(Ext.create(\"CarePortal.view.\"+record.get('Label'),{}));",
                    "                       }",
                    "                    });",
                    "",
                    "",
                    "",
                    "                    results.down('#pid').setValue(component.up('panel').down('#pid').getValue());",
                    "                    results.down('#encounterno').setValue(component.up('panel').down('#encounterno').getValue());",
                    "                    results.down('#fileno').setValue(component.up('panel').down('#fileno').getValue());",
                    "                    results.down('#names').setValue(component.up('panel').down('#names').getValue());",
                    "                    results.down('#sex').setValue(component.up('panel').down('#sex').getValue());",
                    "                    results.down('#dob').setValue(component.up('panel').down('#dob').getValue());",
                    "                    results.down('#createid').setValue(component.up('panel').down('#createid').getValue());",
                    "                    results.down('#labno').setValue(component.up('panel').down('#labno').getValue());",
                    "                    results.down('#priority').setValue(component.up('panel').down('#priority').getValue());",
                    "",
                    "                     results.down('#encNr').setValue(component.up('panel').down('#encounterno').getValue());",
                    "                     results.down('#labNo').setValue(component.up('panel').down('#labno').getValue());",
                    "                //     results.down('#paymode').setValue(component.up('panel').down('#paymode').getValue());",
                    "                }else{",
                    "                     Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Enter Results');",
                    "                }",
                    "",
                    "         },",
                    "         failure: function(response, options) {",
                    "             Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Enter Results');",
                    "         }",
                    "     }",
                    " );",
                    "",
                    "",
                    "});",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "enterResults",
            "designerId": "9d4ea4ab-7159-4d14-9527-37816627f61a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "fullhaemogram",
                "selector": "fullhaemogram",
                "xtype": "fullhaemogram"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "fullhaemogram",
            "designerId": "3b747e2a-53fe-4b19-9185-6eb7a7e31dee"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "stoolocparasite",
                "selector": "stoolocparasite",
                "xtype": "stoolocparasite"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "stoolocparasite",
            "designerId": "974d181c-f239-4349-bbae-0f935dc5a488"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "resultsform",
                "selector": "resultsform",
                "xtype": "resultsform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "resultsform",
            "designerId": "b694f1b3-0668-43de-8de4-f39534816535"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "urinalysis",
                "selector": "urinalysis",
                "xtype": "urinalysis"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "urinalysis",
            "designerId": "3b180643-a9f1-4703-aa36-cfe5de811a42"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "labparamsform",
                "selector": "labparamsform",
                "xtype": "labparamsform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "labparamsform",
            "designerId": "cd68aba6-1464-4fea-8de2-f1786aa90312"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "ancprofile",
                "selector": "ancprofile",
                "xtype": "ancprofile"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "ancprofile",
            "designerId": "7dad5626-c44d-42f6-b2c9-e69fce33fc8a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveLabResults",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'Saved lab Results Successfully.');",
                    "            button.up('form').getForm().reset();",
                    "",
                    "            button.up('window').close();",
                    "",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'There was a problem Saving Lab results. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveLabResults",
            "designerId": "93436bc4-3604-4811-981e-f27a569f485f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "labresults",
                "selector": "labresults",
                "xtype": "labresults"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "labresults",
            "designerId": "f9978a0b-ab78-480e-883b-284b952bc353"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openResultsPanel",
                "implHandler": [
                    "var results=Ext.create(\"CarePortal.view.LabResults\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "",
                    "centerContainer.add(results);",
                    "title.down('#title').setValue('LABORATORY MODULE:  Laboratory Results');",
                    ""
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openResultsPanel",
            "designerId": "f61448d4-c783-4cbe-ba21-3c54d984a0f4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "fn": "openVerifyResults",
                "implHandler": [
                    "component.getEl().on('click', function() {",
                    "",
                    "    Ext.Ajax.request(",
                    "     {",
                    "         // waitMsg: 'Saving changes...',",
                    "         url: 'data/getDataFunctions.php?task=checkUserAccess',",
                    "         params: {",
                    "             activity: 'VerifyResults'",
                    "         },",
                    "         success: function(response, options) {",
                    "             //return true;",
                    "              var strErr=Ext.decode(response.responseText);",
                    "                 //Ext.Msg.alert('Response',strErr.Resp);",
                    "                if(strErr.Resp==='Access'){",
                    "                    var results=Ext.create(\"CarePortal.view.LabResultsGrid\",{});",
                    "                    var resultsStore=Ext.data.StoreManager.lookup(\"LabResultsStore\");",
                    "",
                    "                    var labNo=component.up('panel').down('#labno').getValue();",
                    "                    var encNr=component.up('panel').down('#encounterno').getValue();",
                    "",
                    "                    resultsStore.load({",
                    "                        params: {",
                    "                            labNo:labNo",
                    "                        },",
                    "                        callback: function(records, operation, success) {",
                    "",
                    "                        },",
                    "                        scope: this",
                    "                    });",
                    "",
                    "                    //Ext.Msg.alert('Labno',component.up('panel').down('#labno').getValue());",
                    "                    var containterWindows=Ext.create('Ext.window.Window', {",
                    "                        title:\"Check Results for Verification\",",
                    "                        resizable:false,",
                    "                        closable:true",
                    "                    });",
                    "",
                    "                    containterWindows.add(results);",
                    "                    containterWindows.show();",
                    "",
                    "                    results.down('#labNo').setValue(labNo);",
                    "                    results.down('#encNr').setValue(encNr);",
                    "                }else{",
                    "                     Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Verify Results');",
                    "                }",
                    "",
                    "         },",
                    "         failure: function(response, options) {",
                    "             Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Verify Results');",
                    "         }",
                    "     }",
                    " );",
                    "",
                    "",
                    "",
                    "",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openVerifyResults",
            "designerId": "ceb6207a-c3fb-4536-87d9-f53c52398fba"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "verifyResults",
                "implHandler": [
                    "var labNo=button.up('grid').down('#labNo').getValue();",
                    "var encNr=button.up('grid').down('#encNr').getValue();",
                    "",
                    "Ext.Ajax.request(",
                    "     {",
                    "         // waitMsg: 'Saving changes...',",
                    "         url: 'data/getDataFunctions.php?task=verifyResults',",
                    "         params: {",
                    "             labNo: labNo,",
                    "             encNr: encNr,",
                    "         },",
                    "         success: function(response, options) {",
                    "             var strResp=Ext.decode(response.responseText);",
                    "             Ext.Msg.alert('Success','results successfully Verified');",
                    "             button.up('window').close();",
                    "",
                    "         },",
                    "         failure: function(response, options) {",
                    "             var strErr=Ext.decode(response.responseText);",
                    "             Ext.MessageBox.alert('Error', 'There was a Problem Verifying results please try again or contact System Admin...'+strErr);",
                    "",
                    "         }",
                    "     }",
                    " );"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "verifyResults",
            "designerId": "f965aa63-c1d5-4949-960f-27869f867b7d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "fn": "openApproveResults",
                "implHandler": [
                    " component.getEl().on('click', function() {",
                    "",
                    "     Ext.Ajax.request(",
                    "     {",
                    "         // waitMsg: 'Saving changes...',",
                    "         url: 'data/getDataFunctions.php?task=checkUserAccess',",
                    "         params: {",
                    "             activity: 'ApproveResults'",
                    "         },",
                    "         success: function(response, options) {",
                    "             //return true;",
                    "              var strErr=Ext.decode(response.responseText);",
                    "                // Ext.Msg.alert('Response',strErr.Resp);",
                    "                if(strErr.Resp==='Access'){",
                    "                     var approveForm=Ext.create(\"CarePortal.view.ApproveResults\",{});",
                    "",
                    "                        var labNo=component.up('panel').down('#labno').getValue();",
                    "                        var encNr=component.up('panel').down('#encounterno').getValue();",
                    "",
                    "                         //Ext.Msg.alert('Labno',component.up('panel').down('#labno').getValue());",
                    "                         var containterWindows=Ext.create('Ext.window.Window', {",
                    "                             title:\"Approve Results\",",
                    "                             resizable:false,",
                    "                             closable:true",
                    "                         });",
                    "",
                    "                         containterWindows.add(approveForm);",
                    "                         containterWindows.show();",
                    "",
                    "                         approveForm.down('#labNo').setValue(labNo);",
                    "                         approveForm.down('#encNr').setValue(encNr);",
                    "                }else{",
                    "                    Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Approve Results');",
                    "                }",
                    "",
                    "         },",
                    "         failure: function(response, options) {",
                    "             Ext.Msg.alert('Access Denied','Sorry! You are not allowed to Approve Results');",
                    "         }",
                    "     }",
                    " );",
                    "",
                    "",
                    " });"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openApproveResults",
            "designerId": "8a4973ee-8c1c-47ac-875a-22d0c5f86424"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "approveResults",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'Results Approved Successfully.');",
                    "            button.up('form').getForm().reset();",
                    "            button.up('window').close();",
                    "",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'There was a problem Approving Lab results. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "approveResults",
            "designerId": "f3a3604e-92b5-4380-826d-73338705c221"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openStaffList",
                "implHandler": [
                    "var staffList=Ext.create(\"CarePortal.view.LaboratoryStaff\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "",
                    "centerContainer.add(staffList);",
                    "title.down('#title').setValue('LABORATORY MODULE:  Laboratory Staff List');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openStaffList",
            "designerId": "3a70ab0d-e238-4063-9625-277379223d97"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "laboratoryparams",
                "selector": "laboratoryparams",
                "xtype": "laboratoryparams"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "laboratoryparams",
            "designerId": "6a26aa6b-c294-4ade-92c8-51c343f837b2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openLabParams",
                "implHandler": [
                    "var labParams=Ext.create(\"CarePortal.view.LaboratoryParams\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "",
                    "var labParamStore=Ext.data.StoreManager.lookup('LabParamsStore');",
                    "",
                    "labParamStore.load({",
                    "//     params: {",
                    "//         labNo:labNo",
                    "//     },",
                    "    callback: function(records, operation, success) {",
                    "",
                    "    },",
                    "    scope: this",
                    "});",
                    "",
                    "centerContainer.add(labParams);",
                    "title.down('#title').setValue('LABORATORY MODULE:  Laboratory Parameters');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openLabParams",
            "designerId": "dd2bca1b-2839-4c4f-9980-ed56c5edf9c2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "paramsform",
                "selector": "paramsform",
                "xtype": "paramsform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "paramsform",
            "designerId": "b05ede91-59f2-4172-b8a6-d09b7a8947c8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "openParamsForm",
                "implHandler": [
                    "var paramsForm=Ext.create(\"CarePortal.view.ParamsForm\",{});",
                    "var containterWindows=Ext.create('Ext.window.Window', {",
                    "    title:\"Create Laboratory Parameters\",",
                    "    resizable:false,",
                    "    closable:true",
                    "});",
                    "",
                    "containterWindows.add(paramsForm);",
                    "containterWindows.show();",
                    "",
                    " this.getParamsform().down('#formStatus').setValue('insert');",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openParamsForm",
            "designerId": "9447ff88-0e06-4c4c-8e12-8195b43263f6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "editresults",
                "selector": "editresults",
                "xtype": "editresults"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "editresults",
            "designerId": "ddf421e0-c6b1-40ec-b38c-b405e83291c9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openEditResults",
                "implHandler": [
                    "var editresults=Ext.create(\"CarePortal.view.EditResults\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(editresults);",
                    "title.down('#title').setValue('LABORATORY MODULE:  Edit Laboratory Results');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openEditResults",
            "designerId": "bef48e76-670e-47d1-b34c-af7dadb65ff1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "openResultsForm",
                "implHandler": [
                    "var grid=button.up('grid').up('panel').down('#resultsGrid');",
                    "var results=Ext.create(\"CarePortal.view.ResultsForm\",{});",
                    "var fullHaemogram=Ext.create(\"CarePortal.view.FullHaemogram\",{});",
                    "var StoolOCParasite=Ext.create(\"CarePortal.view.StoolOCParasite\",{});",
                    "var Urinalysis=Ext.create(\"CarePortal.view.Urinalysis\",{});",
                    "var AncProfile=Ext.create(\"CarePortal.view.AncProfile\",{});",
                    "",
                    "var restCrl=results.down('#resultsControl');",
                    "",
                    "var containterWindows=Ext.create('Ext.window.Window', {",
                    "    title:'Results Entry',",
                    "    resizable:false,",
                    "    closable:false",
                    "});",
                    "containterWindows.add(results);",
                    "containterWindows.show();",
                    "restCrl.removeAll();",
                    "",
                    "grid.getStore().each(function(record) {",
                    "    if(record.get('InputType')==='input_box'){",
                    "        restCrl.add(new Ext.form.TextField({",
                    "            fieldLabel: record.get('Description'),",
                    "            name: record.get('PartCode')",
                    "        }));",
                    "    }",
                    "",
                    "    if(record.get('InputType')==='group_field'){",
                    "        console.log(record.get('Label'));",
                    "        restCrl.add(Ext.create(\"Lab.view.\"+record.get('Label'),{}));",
                    "    }",
                    "",
                    "    results.down('#encounterno').setValue(record.get('EncounterNo'));",
                    "    results.down('#labNo').setValue(record.get('LabNo'));",
                    "",
                    "    results.getForm().loadRecord(record);",
                    "",
                    "});",
                    "",
                    "",
                    "",
                    "//results.down('#pid').setValue(button.up('grid').up('panel').down('#pid').getValue());",
                    "// results.down('#encounterno').setValue(button.up('grid').up('panel').down('#encounterno').getValue());",
                    "// results.down('#fileno').setValue(button.up('grid').up('panel').down('#fileno').getValue());",
                    "// results.down('#names').setValue(button.up('panel').down('#names').getValue());",
                    "// results.down('#sex').setValue(button.up('panel').down('#sex').getValue());",
                    "// results.down('#dob').setValue(button.up('panel').down('#dob').getValue());",
                    "// results.down('#createid').setValue(button.up('panel').down('#createid').getValue());",
                    "// results.down('#labno').setValue(button.up('panel').down('#labno').getValue());",
                    "// results.down('#priority').setValue(button.up('panel').down('#priority').getValue());",
                    "// results.down('#encNr').setValue(button.up('panel').down('#encounterno').getValue());",
                    "// results.down('#labNo').setValue(button.up('panel').down('#labno').getValue());",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openResultsForm",
            "designerId": "ae569e89-84fa-450c-b9c2-cb93b2c77fba"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "click"
                ],
                "fn": "openNewStaff",
                "implHandler": [
                    "var newUser=Ext.create(\"CarePortal.view.NewStaff\",{});",
                    "var containterWindows=Ext.create('Ext.window.Window', {",
                    "    title:\"Create New Staff\",",
                    "    resizable:false,",
                    "    closable:true",
                    "});",
                    "",
                    "containterWindows.add(newUser);",
                    "containterWindows.show();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openNewStaff",
            "designerId": "534e2cb4-5580-4e69-ae58-10df1bac8b36"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveStaff",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'Saved Staff Members Successfully.');",
                    "            button.up('form').getForm().reset();",
                    "            button.up('window').close();",
                    "            ",
                    "            var staffList=Ext.data.StoreManager.lookup(\"StaffList\");",
                    "            staffList.load({});",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'There was a problem Saving Staff Members. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveStaff",
            "designerId": "12a6106a-bec5-4f7c-9359-50ee8245ebff"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "options"
                ],
                "fn": "loadStaffDetails",
                "implHandler": [
                    "//Ext.msg.alert('Test',this.getLaboratorystaff().down('#staffListForm').getItemId());",
                    "this.getLaboratorystaff().down('#staffListForm').getForm().loadRecord(record);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadStaffDetails",
            "designerId": "0d6c2b61-c66d-4541-9b16-3f8e84f74c8c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "laboratorystaff",
                "selector": "laboratorystaff",
                "xtype": "laboratorystaff"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "laboratorystaff",
            "designerId": "ac511fea-6ef8-4f02-aa31-566c766770bd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "TakeSamples"
                ],
                "fn": "checkUserAccess",
                "implHandler": [
                    "Ext.Ajax.request(",
                    "     {",
                    "         // waitMsg: 'Saving changes...',",
                    "         url: 'data/getDataFunctions.php?task=checkUserAccess',",
                    "         params: {",
                    "             activity: TakeSamples",
                    "         },",
                    "         success: function(response, options) {",
                    "              var strErr=Ext.decode(response.responseText);",
                    "                 //Ext.Msg.alert('Response',strErr.Resp);",
                    "                if(strErr.Resp==='Access'){",
                    "                   return 'Access';",
                    "                }else{",
                    "                   return 'Denied';",
                    "                }",
                    "         },",
                    "         failure: function(response, options) {",
                    "             return 'false';",
                    "         }",
                    "     }",
                    " );"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "checkUserAccess",
            "designerId": "f209d6c9-f8cf-4a5f-af03-84ac8ff37ea6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openReportForm",
                "implHandler": [
                    "var reportsForm=Ext.create(\"CarePortal.view.ReportsForm\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(reportsForm);",
                    "title.down('#title').setValue('LABORATORY MODULE:  Laboratory Requests & Reports Form');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openReportForm",
            "designerId": "ffba7013-eb86-43e0-9cbd-687ddf9f4af5"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "reportsform",
                "selector": "reportsform",
                "xtype": "reportsform"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "reportsform",
            "designerId": "b932826a-b6d6-458a-a924-0e35618a7f87"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "printLabReport",
                "implHandler": [
                    "var labNo = button.up('panel').down('#labno').getValue();",
                    "var encNr = button.up('panel').down('#encounterno').getValue();",
                    "var pid = button.up('panel').down('#pid').getValue();",
                    "",
                    "// alert(accountNo);",
                    "window.open('reports/LabReport.php?labNo='+labNo+'&encounterno='+encNr+'&pid='+pid,\"Laboratory Reports\",",
                    "            \"menubar=yes,toolbar=yes,width=600,height=600,location=yes,resizable=no,scrollbars=yes,status=yes\");"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "printLabReport",
            "designerId": "755abb08-141f-44d2-824b-2416c38fb797"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "view",
                    "rowIndex",
                    "colIndex",
                    "item",
                    "e",
                    "record",
                    "row"
                ],
                "fn": "addSamples",
                "implHandler": [
                    "Ext.Msg.alert('Test',record.get('LabNo'));"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "addSamples",
            "designerId": "a81301d5-56c2-4e7a-9d46-02b141cef33e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "fn": "loadParamValues",
                "implHandler": [
                    "        var haemoStore=Ext.data.StoreManager.lookup(\"FullHaemogramStore\");",
                    "        var data = [];",
                    "         var form = component.up('form').getForm();",
                    "        haemoStore.load({",
                    "            callback: function(records, operation, success) {",
                    "",
                    "                haemoStore.each(function(record) {",
                    "",
                    "                       form.getFields().each(function(item){",
                    "                           var str=item.getName();",
                    "                           var res = str.split(\"_\");",
                    "                           if(res[1]=== record.get('results') && res[0]==='lower'){",
                    "                               item.setRawValue(record.get('normal'));",
                    "                           }",
                    "                           if(res[1]=== record.get('results') && res[0]==='upper'){",
                    "                               item.setRawValue(record.get('ranges'));",
                    "                           }",
                    "",
                    "",
                    "                        });",
                    "                     data.push(record.getData());",
                    "                });",
                    "",
                    "",
                    "            },",
                    "            scope: this",
                    "        });"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadParamValues",
            "designerId": "76358d2a-737b-42af-8884-1841450b2196"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "updateUserRights",
                "implHandler": [
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'Permissions Updated Successfully.');",
                    "            button.up('form').getForm().reset();",
                    "            button.up('window').close();",
                    "",
                    "",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'There was a problem Updating Permissions. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "updateUserRights",
            "designerId": "9cb99edd-64cc-4862-8a20-b7ebf231fade"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "alllabtests",
                "selector": "alllabtests",
                "xtype": "alllabtests"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "alllabtests",
            "designerId": "2132d01b-d551-4882-85f2-c37b0c4b4cc5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "openLabTests",
                "implHandler": [
                    "var labTests=Ext.create(\"CarePortal.view.AllLabTests\",{});",
                    "centerContainer=this.getViewport().down(\"#mainDetails\");",
                    "title=this.getViewport().down(\"#mainTitle\");",
                    "centerContainer.removeAll();",
                    "centerContainer.add(labTests);",
                    "title.down('#title').setValue('LABORATORY MODULE:  Laboratory Tests List');"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "openLabTests",
            "designerId": "5ad37d15-fc7c-4fba-bdec-1fb8351015b2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "options"
                ],
                "fn": "loadTests",
                "implHandler": [
                    "var labTests=Ext.create(\"CarePortal.view.LabItems\",{});",
                    "",
                    "var counter=this.getLabtests().down(\"#counter\").getValue();",
                    "//var dosage=Ext.create(\"CarePortal.view.Dosage\",{});",
                    "labTests.itemId=record.get('partcode');",
                    "",
                    "",
                    "labTests.down('#partCode').setValue(record.get('PartCode'));",
                    "labTests.down('#description').setValue(record.get('Description'));",
                    "labTests.down('#unitCost').setValue(record.get('Price'));",
                    "",
                    "//labTests.down('#itemNumber').setValue(counter);",
                    "",
                    "var i=counter;",
                    "labTests.down('#partCode').name='partCode'+ i;",
                    "labTests.down('#description').name='description'+ i;",
                    "labTests.down('#unitCost').name='unitCost'+ i;",
                    "",
                    "labTests.down('#notes').name='notes'+ i;",
                    "",
                    "",
                    "newVar=parseInt(counter)+1;",
                    "",
                    "this.getLabtests().down('#labTestForm').add(labTests);",
                    "this.getLabtests().down(\"#counter\").setValue(newVar);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "loadTests",
            "designerId": "98432f6c-2026-40ea-a91c-0d49f5277fa5"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "labItems",
                "selector": "labItems",
                "xtype": "labitems"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "labItems",
            "designerId": "9759e2f3-27bb-4ef5-9011-98cde83891f9"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "labtests",
                "selector": "labtests",
                "xtype": "labtests"
            },
            "configAlternates": {
                "ref": "string",
                "selector": "string",
                "xtype": "string"
            },
            "name": "labtests",
            "designerId": "66bc2d93-5341-4247-a6da-d57318fda4b7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "closeResultsForm",
                "implHandler": [
                    "button.up('window').hide();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "closeResultsForm",
            "designerId": "693e54b3-e777-40f1-b137-fa34dcd70a90"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "gridpanel",
                    "record",
                    "item",
                    "index",
                    "e",
                    "options"
                ],
                "fn": "editLaboratory",
                "implHandler": [
                    "var source=gridpanel.up('grid').down('#Source').getValue();",
                    "if(source=='Dashboard'){",
                    "    var labTests=Ext.create(\"CarePortal.view.LabItems\",{});",
                    "",
                    "    var counter=this.getLabtests().down(\"#counter\").getValue();",
                    "    //var dosage=Ext.create(\"CarePortal.view.Dosage\",{});",
                    "    labTests.itemId=record.get('partcode');",
                    "",
                    "",
                    "    labTests.down('#partCode').setValue(record.get('PartCode'));",
                    "    labTests.down('#description').setValue(record.get('Description'));",
                    "    labTests.down('#unitCost').setValue(record.get('Price'));",
                    "",
                    "    //labTests.down('#itemNumber').setValue(counter);",
                    "",
                    "    var i=counter;",
                    "    labTests.down('#partCode').name='partCode'+ i;",
                    "    labTests.down('#description').name='description'+ i;",
                    "    labTests.down('#unitCost').name='unitCost'+ i;",
                    "",
                    "    labTests.down('#notes').name='notes'+ i;",
                    "",
                    "",
                    "    newVar=parseInt(counter)+1;",
                    "",
                    "    this.getLabtests().down('#labTestForm').add(labTests);",
                    "    this.getLabtests().down(\"#counter\").setValue(newVar);",
                    "}else{",
                    "    var paramsForm=Ext.create(\"CarePortal.view.ParamsForm\",{});",
                    "    var containterWindows=Ext.create('Ext.window.Window', {",
                    "        title:\"Edit Laboratory Parameters\",",
                    "        resizable:false,",
                    "        closable:true",
                    "    });",
                    "",
                    "    this.getParamsform().down('#formStatus').setValue('update');",
                    "    this.getParamsform().down('#PartCode').setValue(record.get('PartCode'));",
                    "    this.getParamsform().down('#Description').setValue(record.get('Description'));",
                    "    this.getParamsform().down('#GroupID').setValue(record.get('GroupID'));",
                    "    this.getParamsform().down('#Price').setValue(record.get('Price'));",
                    "    this.getParamsform().down('#FieldType').setValue(record.get('FieldType'));",
                    "",
                    "    containterWindows.add(paramsForm);",
                    "    containterWindows.show();",
                    "}",
                    "",
                    ""
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "editLaboratory",
            "designerId": "252e5092-51a2-4fe6-8581-dd00d4a9f98d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button"
                ],
                "fn": "saveLabParams",
                "implHandler": [
                    "Ext.Msg.alert('Thank you!', 'Saved MCH Request Successfully.');",
                    "// var pid=button.up('form').down('#pid').getValue();",
                    "var formStatus=button.up('form').down('#formStatus').getValue();",
                    "",
                    "var form = button.up('panel').getForm(); // get the basic form",
                    "//var encNr= this.getMch().down('#encounterNo').getValue();",
                    "",
                    "if (form.isValid()) { // make sure the form contains valid data before submitting",
                    "    form.submit({",
                    "        params:{",
                    "            formStatus:formStatus,",
                    "        },",
                    "        success: function (form, action) {",
                    "            Ext.Msg.alert('Thank you!', 'Saved MCH Request Successfully.');",
                    "//             button.up('form').getForm().reset();",
                    "//             button.up('window').close();",
                    "        },",
                    "        failure: function (form, action) {",
                    "            var jsonResp = Ext.decode(action.response.responseText);",
                    "",
                    "            Ext.Msg.alert('Failed', 'There was a problem with the Request. \\n Error=' + jsonResp.error);",
                    "        }",
                    "    });",
                    "} else { // display error alert if the data is invalid",
                    "    Ext.Msg.alert('Invalid Data', 'Please correct form errors.');",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "saveLabParams",
            "designerId": "87a7746e-d3fe-4089-ad62-d34bd1bc2275"
        }
    ]
}